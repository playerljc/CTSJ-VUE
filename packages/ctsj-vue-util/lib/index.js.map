{"version":3,"file":"index.js","sources":["index.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.uuid = exports.noop = exports.getObjectByChainStr = exports.chainCallAssignment = exports.cloneDeep = exports.clone = exports.createElement = exports.isRouterViewNode = exports.isRouterLinkNode = exports.isDynamicComponentNode = exports.isSlotNode = exports.isTemplateNode = exports.isElementNode = exports.isCommentNode = exports.isTextNode = exports.isObject = exports.isFunction = exports.isString = exports.isBoolean = exports.isNumber = exports.isArray = exports.isEmpty = exports.merge = void 0;\r\nvar cloneDeep_1 = __importDefault(require(\"lodash/cloneDeep\"));\r\nvar uuid_1 = __importDefault(require(\"./uuid\"));\r\n/**\r\n * merge - 会改变srcObj并返回\r\n * @param srcObj - {Object} 混入的对象\r\n * @param tarObjs - {Array<Object>} - 要混入的值\r\n * @return {Object}\r\n */\r\nfunction merge(srcObj) {\r\n    var tarObjs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        tarObjs[_i - 1] = arguments[_i];\r\n    }\r\n    return Object.assign.apply(Object, [srcObj].concat(tarObjs));\r\n}\r\nexports.merge = merge;\r\n/**\r\n * isEmpty - 对象是否为空\r\n * @param value\r\n */\r\nfunction isEmpty(value) {\r\n    if (value === null || value === '' || value === undefined)\r\n        return true;\r\n    return false;\r\n}\r\nexports.isEmpty = isEmpty;\r\n/**\r\n * isArray - 判断数组\r\n * @param obj\r\n * @return {boolean}\r\n */\r\nfunction isArray(obj) {\r\n    return Array.isArray(obj);\r\n}\r\nexports.isArray = isArray;\r\n/**\r\n * isNumber - 判断是否是number\r\n * @param val\r\n * @return {boolean}\r\n */\r\nfunction isNumber(val) {\r\n    return !isObject(val) && !isArray(val) && !isFunction(val) && typeof val === 'number';\r\n}\r\nexports.isNumber = isNumber;\r\n/**\r\n * isBoolean - 判断是否是boolean\r\n * @param val\r\n * @return {boolean}\r\n */\r\nfunction isBoolean(val) {\r\n    return (typeof val).toLowerCase() === 'boolean';\r\n}\r\nexports.isBoolean = isBoolean;\r\n/**\r\n * isString - 判断是否是string\r\n * @param val\r\n * @return {boolean}\r\n */\r\nfunction isString(val) {\r\n    return (typeof val).toLowerCase() === 'string';\r\n}\r\nexports.isString = isString;\r\n/**\r\n * isFunction - 判断函数\r\n * @param obj\r\n * @return {boolean}\r\n */\r\nfunction isFunction(obj) {\r\n    return obj instanceof Function;\r\n}\r\nexports.isFunction = isFunction;\r\n/**\r\n * isObject - 是否是对象\r\n * @param obj\r\n * @return {boolean}\r\n */\r\nfunction isObject(obj) {\r\n    return obj instanceof Object && !Array.isArray(obj) && !(obj instanceof Function);\r\n}\r\nexports.isObject = isObject;\r\n/**\r\n * isTextNode - 是否是文本节点\r\n * @param el - Node\r\n * @return {boolean}\r\n */\r\nfunction isTextNode(el) {\r\n    return el.nodeType === Node.TEXT_NODE;\r\n}\r\nexports.isTextNode = isTextNode;\r\n/**\r\n * isCommentNode - 是否是注释节点\r\n * @param el\r\n * @return {boolean}\r\n */\r\nfunction isCommentNode(el) {\r\n    return el.nodeType === Node.COMMENT_NODE;\r\n}\r\nexports.isCommentNode = isCommentNode;\r\n/**\r\n * isElementNode - 是否是元素节点\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isElementNode(el) {\r\n    return el.nodeType === Node.ELEMENT_NODE;\r\n}\r\nexports.isElementNode = isElementNode;\r\n/**\r\n * isTemplateNode - 是否是template元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isTemplateNode(el) {\r\n    return el.nodeName.toLowerCase() === 'template';\r\n}\r\nexports.isTemplateNode = isTemplateNode;\r\n/**\r\n * isSlotNode - 是否是slot元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isSlotNode(el) {\r\n    return el.nodeName.toLowerCase() === 'slot';\r\n}\r\nexports.isSlotNode = isSlotNode;\r\n/**\r\n * isDynamicComponentNode - 是否是动态组件元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isDynamicComponentNode(el) {\r\n    return el.nodeName.toLowerCase() === 'component';\r\n}\r\nexports.isDynamicComponentNode = isDynamicComponentNode;\r\n/**\r\n * isRouterLinkNode - 是否是router-link元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isRouterLinkNode(el) {\r\n    return el.nodeName.toLowerCase() === 'router-link';\r\n}\r\nexports.isRouterLinkNode = isRouterLinkNode;\r\n/**\r\n * isRouterViewNode - 是否是router-view元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isRouterViewNode(el) {\r\n    return el.nodeName.toLowerCase() === 'router-view';\r\n}\r\nexports.isRouterViewNode = isRouterViewNode;\r\n/**\r\n * createElement - 根据html字符串创建dom\r\n * @param htmlStr - string\r\n * @return {Element}\r\n */\r\nfunction createElement(htmlStr) {\r\n    var el = document.createElement('div');\r\n    el.innerHTML = htmlStr;\r\n    return el.firstElementChild;\r\n}\r\nexports.createElement = createElement;\r\n/**\r\n * clone - 创建一个 value 的浅拷贝\r\n * @param value - Object | Array\r\n * @return Object | Array | null\r\n */\r\nfunction clone(value) {\r\n    if (!isObject(value) && !isArray(value))\r\n        return null;\r\n    if (isObject(value)) {\r\n        // 新的引用\r\n        var cloneValue_1 = {};\r\n        Object.keys(value).forEach(function (key) {\r\n            if (value.hasOwnProperty(key)) {\r\n                cloneValue_1[key] = value[key];\r\n            }\r\n        });\r\n        return cloneValue_1;\r\n    }\r\n    if (isArray(value)) {\r\n        return [].concat(value);\r\n    }\r\n    return null;\r\n}\r\nexports.clone = clone;\r\n/**\r\n * cloneDeep - 创建一个value的深拷贝\r\n * @param value - Object | Array\r\n * @return Object | Array\r\n */\r\nfunction cloneDeep(value, map) {\r\n    if (map === void 0) { map = new Map(); }\r\n    return cloneDeep_1.default(value);\r\n    // if (!isObject(value) && !isArray(value)) return value;\r\n    //\r\n    // if (isObject(value)) {\r\n    //   // 新的引用\r\n    //   const cloneValue = {};\r\n    //\r\n    //   if (map.get(value)) {\r\n    //     return map.get(value);\r\n    //   }\r\n    //\r\n    //   map.set(value, cloneValue);\r\n    //\r\n    //   Object.keys(value).forEach((key) => {\r\n    //     if (value.hasOwnProperty(key)) {\r\n    //       const itemValue = value[key];\r\n    //       if (isObject(itemValue) || isArray(itemValue)) {\r\n    //         cloneValue[key] = cloneDeep(itemValue, map);\r\n    //       } else {\r\n    //         cloneValue[key] = value[key];\r\n    //       }\r\n    //     } else {\r\n    //       // 如果itemValue不是对象或者数组则直接赋值就可以(例如: primary 类型，和Function类型)\r\n    //       cloneValue[key] = value[key];\r\n    //     }\r\n    //   });\r\n    //\r\n    //   return cloneValue;\r\n    // }\r\n    //\r\n    // if (isArray(value)) {\r\n    //   const cloneValue = [];\r\n    //\r\n    //   if (map.get(value)) {\r\n    //     return map.get(value);\r\n    //   }\r\n    //   map.set(value, cloneValue);\r\n    //\r\n    //   value.forEach((itemValue) => {\r\n    //     if (isObject(itemValue) || isArray(itemValue)) {\r\n    //       cloneValue.push(cloneDeep(itemValue, map));\r\n    //     } else {\r\n    //       // 如果itemValue不是对象或者数组则直接赋值就可以(例如: primary 类型，和Function类型)\r\n    //       cloneValue.push(itemValue);\r\n    //     }\r\n    //   });\r\n    //   return cloneValue;\r\n    // }\r\n    //\r\n    // return value;\r\n}\r\nexports.cloneDeep = cloneDeep;\r\n/**\r\n * chainCallAssignment - 对象的链式赋值\r\n * obj.a.b.c.d.x.x.x = value\r\n * @param obj Object - 赋值的对象\r\n * @param chainStr string - 属性链式表达式 a.b.c\r\n * @param value any - 要复值的值\r\n */\r\nfunction chainCallAssignment(_a) {\r\n    var obj = _a.obj, chainStr = _a.chainStr, value = _a.value;\r\n    if (!isObject(obj) || !isString(chainStr) || isEmpty(chainStr) || isEmpty(obj))\r\n        return false;\r\n    var chain = chainStr.split('.');\r\n    // const obj = {};\r\n    // a.b.c\r\n    // const item = obj['a']\r\n    var target = obj;\r\n    for (var i = 0; i < chain.length; i++) {\r\n        var property = chain[i];\r\n        if (i < chain.length - 1) {\r\n            target = target[property];\r\n        }\r\n        else {\r\n            target[property] = value;\r\n        }\r\n    }\r\n}\r\nexports.chainCallAssignment = chainCallAssignment;\r\n/**\r\n * getObjectByChainStr - 通过chainStr获取对象\r\n * obj.a.b.c.d.x.x.x = value\r\n * @param obj Object - 赋值的对象\r\n * @param chainStr string - 属性链式表达式 a.b.c\r\n * @return Object\r\n */\r\nfunction getObjectByChainStr(_a) {\r\n    var obj = _a.obj, chainStr = _a.chainStr;\r\n    if (!isObject(obj) || !isString(chainStr) || isEmpty(chainStr) || isEmpty(obj))\r\n        return obj;\r\n    var chain = chainStr.split('.');\r\n    // const obj = {};\r\n    // a.b.c\r\n    // const item = obj['a']\r\n    var target = obj;\r\n    for (var i = 0; i < chain.length; i++) {\r\n        target = target[chain[i]];\r\n    }\r\n    return target;\r\n}\r\nexports.getObjectByChainStr = getObjectByChainStr;\r\n/**\r\n * noop - 空函数\r\n */\r\nfunction noop() { }\r\nexports.noop = noop;\r\n/**\r\n * uuid - 获取uuid\r\n * @return {string}\r\n */\r\nfunction uuid() {\r\n    return uuid_1.default();\r\n}\r\nexports.uuid = uuid;\r\n"],"names":["__importDefault","this","mod","__esModule","default","Object","defineProperty","exports","value","uuid","noop","getObjectByChainStr","chainCallAssignment","cloneDeep","clone","createElement","isRouterViewNode","isRouterLinkNode","isDynamicComponentNode","isSlotNode","isTemplateNode","isElementNode","isCommentNode","isTextNode","isObject","isFunction","isString","isBoolean","isNumber","isArray","isEmpty","merge","cloneDeep_1","require","uuid_1","srcObj","tarObjs","_i","arguments","length","assign","apply","concat","undefined","obj","Array","val","toLowerCase","Function","el","nodeType","Node","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","nodeName","htmlStr","document","innerHTML","firstElementChild","cloneValue_1","keys","forEach","key","hasOwnProperty","map","Map","_a","chainStr","chain","split","target","i","property"],"mappings":"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"}