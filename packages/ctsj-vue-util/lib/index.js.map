{"version":3,"file":"index.js","sources":["index.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.uuid = exports.noop = exports.cloneDeep = exports.clone = exports.createElement = exports.isRouterViewNode = exports.isRouterLinkNode = exports.isDynamicComponentNode = exports.isSlotNode = exports.isTemplateNode = exports.isElementNode = exports.isTextNode = exports.isObject = exports.isFunction = exports.isNumber = exports.isArray = exports.isEmpty = exports.merge = void 0;\r\nvar cloneDeep_1 = __importDefault(require(\"lodash/cloneDeep\"));\r\nvar uuid_1 = __importDefault(require(\"./uuid\"));\r\n/**\r\n * merge - 会改变srcObj并返回\r\n * @param srcObj - {Object} 混入的对象\r\n * @param tarObjs - {Array<Object>} - 要混入的值\r\n * @return {Object}\r\n */\r\nfunction merge(srcObj) {\r\n    var tarObjs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        tarObjs[_i - 1] = arguments[_i];\r\n    }\r\n    return Object.assign.apply(Object, [srcObj].concat(tarObjs));\r\n}\r\nexports.merge = merge;\r\n/**\r\n * isEmpty - 对象是否为空\r\n * @param value\r\n */\r\nfunction isEmpty(value) {\r\n    if (value === null || value === '' || value === undefined)\r\n        return true;\r\n    return false;\r\n}\r\nexports.isEmpty = isEmpty;\r\n/**\r\n * isArray - 判断数组\r\n * @param obj\r\n * @return {boolean}\r\n */\r\nfunction isArray(obj) {\r\n    return Array.isArray(obj);\r\n}\r\nexports.isArray = isArray;\r\n/**\r\n * isNumber - 判断是否是number\r\n * @param val\r\n * @return {boolean}\r\n */\r\nfunction isNumber(val) {\r\n    return !isObject(val) && !isArray(val) && !isFunction(val) && typeof val === 'number';\r\n}\r\nexports.isNumber = isNumber;\r\n/**\r\n * isFunction - 判断函数\r\n * @param obj\r\n * @return {boolean}\r\n */\r\nfunction isFunction(obj) {\r\n    return obj instanceof Function;\r\n}\r\nexports.isFunction = isFunction;\r\n/**\r\n * isObject - 是否是对象\r\n * @param obj\r\n * @return {boolean}\r\n */\r\nfunction isObject(obj) {\r\n    return obj instanceof Object && !Array.isArray(obj) && !(obj instanceof Function);\r\n}\r\nexports.isObject = isObject;\r\n/**\r\n * isTextNode - 是否是文本节点\r\n * @param el - Node\r\n * @return {boolean}\r\n */\r\nfunction isTextNode(el) {\r\n    return el.nodeType === Node.TEXT_NODE;\r\n}\r\nexports.isTextNode = isTextNode;\r\n/**\r\n * isElementNode - 是否是元素节点\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isElementNode(el) {\r\n    return el.nodeType === Node.ELEMENT_NODE;\r\n}\r\nexports.isElementNode = isElementNode;\r\n/**\r\n * isTemplateNode - 是否是template元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isTemplateNode(el) {\r\n    return el.nodeName.toLowerCase() === 'template';\r\n}\r\nexports.isTemplateNode = isTemplateNode;\r\n/**\r\n * isSlotNode - 是否是slot元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isSlotNode(el) {\r\n    return el.nodeName.toLowerCase() === 'slot';\r\n}\r\nexports.isSlotNode = isSlotNode;\r\n/**\r\n * isDynamicComponentNode - 是否是动态组件元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isDynamicComponentNode(el) {\r\n    return el.nodeName.toLowerCase() === 'component';\r\n}\r\nexports.isDynamicComponentNode = isDynamicComponentNode;\r\n/**\r\n * isRouterLinkNode - 是否是router-link元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isRouterLinkNode(el) {\r\n    return el.nodeName.toLowerCase() === 'router-link';\r\n}\r\nexports.isRouterLinkNode = isRouterLinkNode;\r\n/**\r\n * isRouterViewNode - 是否是router-view元素\r\n * @param el - Element\r\n * @return {boolean}\r\n */\r\nfunction isRouterViewNode(el) {\r\n    return el.nodeName.toLowerCase() === 'router-view';\r\n}\r\nexports.isRouterViewNode = isRouterViewNode;\r\n/**\r\n * createElement - 根据html字符串创建dom\r\n * @param htmlStr - string\r\n * @return {Element}\r\n */\r\nfunction createElement(htmlStr) {\r\n    var el = document.createElement('div');\r\n    el.innerHTML = htmlStr;\r\n    return el.firstElementChild;\r\n}\r\nexports.createElement = createElement;\r\n/**\r\n * clone - 创建一个 value 的浅拷贝\r\n * @param value - Object | Array\r\n * @return Object | Array | null\r\n */\r\nfunction clone(value) {\r\n    if (!isObject(value) && !isArray(value))\r\n        return null;\r\n    if (isObject(value)) {\r\n        // 新的引用\r\n        var cloneValue_1 = {};\r\n        Object.keys(value).forEach(function (key) {\r\n            if (value.hasOwnProperty(key)) {\r\n                cloneValue_1[key] = value[key];\r\n            }\r\n        });\r\n        return cloneValue_1;\r\n    }\r\n    if (isArray(value)) {\r\n        return [].concat(value);\r\n    }\r\n    return null;\r\n}\r\nexports.clone = clone;\r\n/**\r\n * cloneDeep - 创建一个value的深拷贝\r\n * @param value - Object | Array\r\n * @return Object | Array\r\n */\r\nfunction cloneDeep(value, map) {\r\n    if (map === void 0) { map = new Map(); }\r\n    return cloneDeep_1.default(value);\r\n    // if (!isObject(value) && !isArray(value)) return value;\r\n    //\r\n    // if (isObject(value)) {\r\n    //   // 新的引用\r\n    //   const cloneValue = {};\r\n    //\r\n    //   if (map.get(value)) {\r\n    //     return map.get(value);\r\n    //   }\r\n    //\r\n    //   map.set(value, cloneValue);\r\n    //\r\n    //   Object.keys(value).forEach((key) => {\r\n    //     if (value.hasOwnProperty(key)) {\r\n    //       const itemValue = value[key];\r\n    //       if (isObject(itemValue) || isArray(itemValue)) {\r\n    //         cloneValue[key] = cloneDeep(itemValue, map);\r\n    //       } else {\r\n    //         cloneValue[key] = value[key];\r\n    //       }\r\n    //     } else {\r\n    //       // 如果itemValue不是对象或者数组则直接赋值就可以(例如: primary 类型，和Function类型)\r\n    //       cloneValue[key] = value[key];\r\n    //     }\r\n    //   });\r\n    //\r\n    //   return cloneValue;\r\n    // }\r\n    //\r\n    // if (isArray(value)) {\r\n    //   const cloneValue = [];\r\n    //\r\n    //   if (map.get(value)) {\r\n    //     return map.get(value);\r\n    //   }\r\n    //   map.set(value, cloneValue);\r\n    //\r\n    //   value.forEach((itemValue) => {\r\n    //     if (isObject(itemValue) || isArray(itemValue)) {\r\n    //       cloneValue.push(cloneDeep(itemValue, map));\r\n    //     } else {\r\n    //       // 如果itemValue不是对象或者数组则直接赋值就可以(例如: primary 类型，和Function类型)\r\n    //       cloneValue.push(itemValue);\r\n    //     }\r\n    //   });\r\n    //   return cloneValue;\r\n    // }\r\n    //\r\n    // return value;\r\n}\r\nexports.cloneDeep = cloneDeep;\r\n/**\r\n * noop - 空函数\r\n */\r\nfunction noop() { }\r\nexports.noop = noop;\r\n/**\r\n * uuid - 获取uuid\r\n * @return {string}\r\n */\r\nfunction uuid() {\r\n    return uuid_1.default();\r\n}\r\nexports.uuid = uuid;\r\n"],"names":["__importDefault","this","mod","__esModule","default","Object","defineProperty","exports","value","uuid","noop","cloneDeep","clone","createElement","isRouterViewNode","isRouterLinkNode","isDynamicComponentNode","isSlotNode","isTemplateNode","isElementNode","isTextNode","isObject","isFunction","isNumber","isArray","isEmpty","merge","cloneDeep_1","require","uuid_1","srcObj","tarObjs","_i","arguments","length","assign","apply","concat","undefined","obj","Array","val","Function","el","nodeType","Node","TEXT_NODE","ELEMENT_NODE","nodeName","toLowerCase","htmlStr","document","innerHTML","firstElementChild","cloneValue_1","keys","forEach","key","hasOwnProperty","map","Map"],"mappings":"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"}