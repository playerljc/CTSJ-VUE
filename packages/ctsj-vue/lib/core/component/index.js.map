{"version":3,"file":"index.js","sources":["core/component/index.js"],"sourcesContent":["\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar on_1 = require(\"../../compiler/directives/on\");\r\nvar render_1 = require(\"../../compiler/render\");\r\nvar proxy_1 = require(\"../proxy\");\r\nvar util_1 = require(\"../../shared/util\");\r\nvar util_2 = require(\"./util\");\r\nvar merge_1 = require(\"../merge\");\r\nvar util_3 = require(\"../util\");\r\nvar constants_1 = require(\"../../shared/constants\");\r\n/**\r\n * getPropsAndAttrs - 获取argConfig中的props和attrs\r\n * @return Object\r\n */\r\nfunction getPropsAndAttrs() {\r\n    // 传递进来的 attrs是k/v形式\r\n    var attrs = this.$argConfig.attrs;\r\n    // 配置定义的\r\n    var props = util_1.cloneDeep(this.$config.props);\r\n    var prop = {};\r\n    var attr = {};\r\n    // props必须是object或者array\r\n    if (util_1.isObject(props) || util_1.isArray(props)) {\r\n        // 如果props是对象则props是keys的集合\r\n        if (util_1.isObject(props)) {\r\n            props = Object.keys(props);\r\n        }\r\n        var model = this.$config.model;\r\n        // 如果用户设置了model选项，且组件设置了v-model\r\n        if (model && 'value' in attrs) {\r\n            if (!props.includes(model.prop)) {\r\n                props.push(model.prop);\r\n                attrs[model.prop] = attrs.value;\r\n                delete attrs.value;\r\n            }\r\n        }\r\n        else if ('value' in attrs && !props.includes('value')) {\r\n            props.push('value');\r\n        }\r\n    }\r\n    // 迭代传递进来的attrs\r\n    Object.keys(attrs).forEach(function (key) {\r\n        // 在props中寻找key是否存在\r\n        // 因为在props中定义的是驼峰形式，而在组件标签中定义的是xxx-xxx-xxx形式，所以prop要转换成驼峰形式\r\n        var index = props.findIndex(function (prop) { return util_2.pascalCaseToKebabCase(prop) === key; });\r\n        if (index !== -1) {\r\n            prop[props[index]] = attrs[key];\r\n        }\r\n        else {\r\n            attr[key] = attrs[key];\r\n        }\r\n    });\r\n    return {\r\n        props: prop,\r\n        attrs: attr,\r\n    };\r\n}\r\n/**\r\n * createEmit - 创建$emit对象\r\n * @return Function\r\n */\r\n// TODO:$emit的事件处理函数\r\nfunction createEmit() {\r\n    var self = this;\r\n    // <my-component v-on:abc=\"xxxxxx\"></my-component>\r\n    /**\r\n     * $emit执行\r\n     * @param eventName string - 事件名称\r\n     * @param argv Array - 事件的参数\r\n     */\r\n    return function (eventName) {\r\n        var argv = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argv[_i - 1] = arguments[_i];\r\n        }\r\n        var events = self.$argConfig.events;\r\n        var eventNameFormat = eventName.toLowerCase();\r\n        if (!(eventNameFormat in events))\r\n            return false;\r\n        util_1.createExecutionContext.call(self, self, function () {\r\n            on_1.executeVOn.call(self.$parent, {\r\n                context: self.$parent.$dataProxy,\r\n                entry: {\r\n                    expression: events[eventNameFormat],\r\n                },\r\n                argv: argv,\r\n            });\r\n        });\r\n    };\r\n}\r\n/**\r\n * Component\r\n * @class Component\r\n * @classdesc 组件\r\n */\r\nvar Component = /** @class */ (function () {\r\n    /**\r\n     * constructor\r\n     * @param config {\r\n     *   attrs: Object - 外层标签所有的属性\r\n     *   events: Object - 外层v-on的值\r\n     *   parentContext: Object - 父亲的上下文对象\r\n     * }\r\n     * @param key - 组件的key\r\n     * @param el - 组件的el元素\r\n     * @param top - vue实例\r\n     * @param parent - 父对象(可能是Vue实例，也肯能是Component实例)\r\n     */\r\n    function Component(config, _a) {\r\n        var key = _a.key, el = _a.el, top = _a.top, parent = _a.parent;\r\n        this.$el = el;\r\n        this.$top = top;\r\n        this.$parent = parent;\r\n        this.$key = key;\r\n        this.$config = this.getConfig();\r\n        this.$argConfig = config;\r\n        // 创建组件的$emit实例\r\n        this.$emit = createEmit.call(this);\r\n        // 获取父亲传递过来的props和attrs\r\n        var _b = getPropsAndAttrs.call(this), props = _b.props, attrs = _b.attrs;\r\n        this.$attes = attrs;\r\n        this.$props = util_1.cloneDeep(props);\r\n        // 创建props的代理\r\n        this.$propsProxy = proxy_1.createPropsProxy.call(this, this.$props);\r\n        // 没有被代理的props + data的合体\r\n        this.$noProxySrcData = __assign(__assign({}, this.$props), util_1.cloneDeep(util_1.isFunction(this.$config.data) ? this.$config.data() : {}));\r\n        // data混入\r\n        merge_1.mergeData.call(this);\r\n        // computed混入\r\n        merge_1.mergeComputed.call(this);\r\n        // beforeCreate\r\n        util_3.triggerLifecycle.call(this, constants_1.LIFECYCLE_HOOKS[0]);\r\n        // dataObserver\r\n        this.$dataProxy = proxy_1.createComponentProxy.call(this, this);\r\n        // mergeProps\r\n        merge_1.mergeProps.call(this, this.$props);\r\n        // methods混入\r\n        merge_1.mergeMethods.call(this);\r\n        // 创建template的el对象\r\n        this.templateEl = util_1.createElement(this.$config.template);\r\n        // 存放组件实例的Map\r\n        this.componentsMap = new Map();\r\n    }\r\n    /**\r\n     * assignClassAndStyle - 混入class和style\r\n     * @param VNode\r\n     */\r\n    Component.prototype.assignClassAndStyle = function (VNode) {\r\n        var attrs = this.$argConfig.attrs;\r\n        if (attrs.class) {\r\n            if (util_1.isObject(attrs.class)) {\r\n                Object.assign(VNode.data.class, attrs.class);\r\n            }\r\n            else if (typeof attrs.class === 'string') {\r\n                attrs.class.split(' ').forEach(function (className) {\r\n                    VNode.data.class[className] = true;\r\n                });\r\n            }\r\n        }\r\n        if (attrs.style) {\r\n            if (util_1.isObject(attrs.style)) {\r\n                Object.assign(VNode.data.style, attrs.style);\r\n            }\r\n            else if (typeof attrs.style === 'string') {\r\n                attrs.style.split(';').forEach(function (style) {\r\n                    var entry = style.split(':');\r\n                    VNode.data.style[entry[0]] = entry[1];\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * setParams\r\n     * @param config\r\n     */\r\n    Component.prototype.setParams = function (config) {\r\n        this.$argConfig = config;\r\n    };\r\n    /**\r\n     * 获取组件配置\r\n     * @return Object\r\n     */\r\n    Component.prototype.getConfig = function () {\r\n        return util_2.getComponentConfig(this.$parent, this.$el.tagName.toLowerCase());\r\n    };\r\n    /**\r\n     * 获取组件components的配置\r\n     * @return Object\r\n     */\r\n    Component.prototype.getComponentsConfig = function () {\r\n        var config = this.getConfig();\r\n        if (!config || !('components' in config) || !config.components)\r\n            return {};\r\n        var components = {};\r\n        Object.keys(config.components).forEach(function (key) {\r\n            // 这块和Vue.register一样\r\n            // xxx-xxx-xxx\r\n            if (util_2.isKebabCase(key)) {\r\n                components[key.toLowerCase()] = config.components[key];\r\n            }\r\n            // AbcDefGhi\r\n            else if (util_2.isPascalCase(key)) {\r\n                components[key.toLowerCase()] = config.components[key];\r\n                components[util_2.pascalCaseToKebabCase(key)] = config.components[key];\r\n            }\r\n        });\r\n        return components;\r\n    };\r\n    /**\r\n     * getParentContext - 获取父亲的上下文对象\r\n     * @return Object\r\n     */\r\n    Component.prototype.getParentContext = function () {\r\n        return this.$argConfig.parentContext;\r\n    };\r\n    /**\r\n     * compiler - 编译这个Component返回这个Component的VNode\r\n     * @return {VNode}\r\n     */\r\n    Component.prototype.render = function () {\r\n        // 渲染\r\n        // beforeMount\r\n        // render\r\n        // mount\r\n        // 渲染\r\n        var VNode = render_1.renderComponent.call(this);\r\n        // class和style的处理\r\n        this.assignClassAndStyle(VNode);\r\n        VNode.key = this.$key;\r\n        return VNode;\r\n    };\r\n    /**\r\n     * update - 更新这个Component返回这个Component的VNode\r\n     * 更新分为2中\r\n     *  1.父容器更新导致组件的更新(props)\r\n     *    父容器的更新需要调用update方法只返回VNode即可\r\n     *  2.组件内部的更新(data)\r\n     *    组件内部的更新需要调用$top的refresh来执行虚拟Dom的path操作\r\n     * @return {VNode}\r\n     */\r\n    Component.prototype.update = function () {\r\n        var _this = this;\r\n        // 父容器更新\r\n        var _a = getPropsAndAttrs.call(this), props = _a.props, attrs = _a.attrs;\r\n        this.$attes = attrs;\r\n        // 之前props的keys\r\n        var prePropsKeys = Object.keys(this.$props);\r\n        // 新的props\r\n        this.$props = util_1.cloneDeep(props);\r\n        // 先触发watch\r\n        Object.assign(this.$propsProxy, this.$props);\r\n        // 之前props的keys\r\n        prePropsKeys.forEach(function (key) {\r\n            if (key in _this.$noProxySrcData) {\r\n                delete _this.$noProxySrcData[key];\r\n            }\r\n            if (key in _this) {\r\n                delete _this[key];\r\n            }\r\n        });\r\n        Object.assign(this.$noProxySrcData, this.$props);\r\n        merge_1.mergeProps.call(this, this.$props);\r\n        this.$propsProxy = proxy_1.createPropsProxy.call(this, this.$props);\r\n        // 在这个地方进行watch操作\r\n        // 修改被代理对象的props，而不是修改$dataProxy对象，这样不会触发set\r\n        // 这样写就不能进行watch操作\r\n        // 把之前的props删除，混入现在的props\r\n        merge_1.mergeMethods.call(this);\r\n        var VNode = render_1.renderComponent.call(this);\r\n        // class和style的处理\r\n        this.assignClassAndStyle(VNode);\r\n        VNode.key = this.$key;\r\n        return VNode;\r\n    };\r\n    return Component;\r\n}());\r\nexports.default = Component;\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","on_1","require","render_1","proxy_1","util_1","util_2","merge_1","util_3","constants_1","getPropsAndAttrs","model","attrs","$argConfig","props","cloneDeep","$config","prop","attr","isObject","isArray","keys","includes","push","forEach","key","index","findIndex","pascalCaseToKebabCase","createEmit","self","eventName","argv","_i","events","eventNameFormat","toLowerCase","createExecutionContext","executeVOn","$parent","context","$dataProxy","entry","expression","Component","config","_a","el","top","parent","$el","$top","$key","getConfig","$emit","_b","$attes","$props","$propsProxy","createPropsProxy","$noProxySrcData","isFunction","data","mergeData","mergeComputed","triggerLifecycle","LIFECYCLE_HOOKS","createComponentProxy","mergeProps","mergeMethods","templateEl","createElement","template","componentsMap","Map","assignClassAndStyle","VNode","class","split","className","style","setParams","getComponentConfig","tagName","getComponentsConfig","components","isKebabCase","isPascalCase","getParentContext","parentContext","render","renderComponent","update","_this","prePropsKeys","default"],"mappings":"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"}