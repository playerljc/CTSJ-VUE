{"version":3,"file":"renderUtil.js","sources":["compiler/renderUtil.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.renderLoop = exports.renderAttr = exports.renderVAttr = void 0;\r\nvar vue_util_1 = require(\"@ctsj/vue-util\");\r\nvar util_1 = require(\"../shared/util\");\r\nvar util_2 = require(\"../core/util\");\r\nvar util_3 = require(\"../core/component/util\");\r\nvar renderComponentNode_1 = require(\"./renderComponentNode\");\r\nvar renderDynamicComponentNode_1 = require(\"./renderDynamicComponentNode\");\r\nvar renderElementNode_1 = require(\"./renderElementNode\");\r\nvar renderSlotNode_1 = require(\"./renderSlotNode\");\r\nvar renderTemplateNode_1 = require(\"./renderTemplateNode\");\r\nvar renderTextNode_1 = require(\"./renderTextNode\");\r\nvar renderRouterLinkNode_1 = require(\"./renderRouterLinkNode\");\r\nvar renderRouterViewNode_1 = require(\"./renderRouterViewNode\");\r\nvar util_4 = require(\"./directives/util\");\r\nvar for_1 = require(\"./directives/for\");\r\nvar if_1 = require(\"./directives/if\");\r\nvar else_1 = require(\"./directives/else\");\r\nvar else_if_1 = require(\"./directives/else-if\");\r\nvar vdom_1 = require(\"../core/vdom\");\r\nvar show_1 = require(\"./directives/show\");\r\nvar bind_1 = require(\"./directives/bind\");\r\nvar constants_1 = require(\"../shared/constants\");\r\nvar model_1 = require(\"./directives/model\");\r\nvar on_1 = require(\"./directives/on\");\r\nvar html_1 = require(\"./directives/html\");\r\nvar regexp_1 = require(\"../shared/regexp\");\r\n/**\r\n * renderVAttr - 解析指令属性\r\n * @param el - HtmlElement 元素的el\r\n * @param parentVNode - VNode 父元素VNode\r\n * @param parentElement - HtmlElement 父元素\r\n * @param context - Object 上下文对象\r\n * @param renderFun - Function 渲染函数\r\n * @return {VNode | Array<VNode>}\r\n */\r\nfunction renderVAttr(_a) {\r\n    /**\r\n     * for(item in items)   (new)context -> item\r\n     *  for(item1 in items)        context -> item1\r\n     *   for(item11 in items)       context -> item11\r\n     *    for(item111 in itmes)       context -> item111\r\n     *   for(item21 in items)       context -> item21\r\n     *  for(item2 in itmes)        context -> item2\r\n     *  for(item3 in itmes)        context -> item3\r\n     * for(item in items)   (new)context -> item\r\n     */\r\n    var el = _a.el, parentVNode = _a.parentVNode, parentElement = _a.parentElement, context = _a.context, renderFun = _a.renderFun;\r\n    var self = this;\r\n    // 获取所有指令属性\r\n    var vAttrNames = util_4.getVAttrNames(el);\r\n    if (!vAttrNames.length) {\r\n        return {\r\n            Continue: true,\r\n            VNode: null,\r\n        };\r\n    }\r\n    // 解析el的v-for标签\r\n    if (for_1.hasVFor(vAttrNames)) {\r\n        // parse v-for\r\n        return {\r\n            Continue: false,\r\n            // 如果没有父元素是不能使用v-for的所以返回null\r\n            VNode: parentVNode\r\n                ? for_1.parseVFor.call(this, \r\n                // 如果context是this.$dataProxy则需要重新创建新的context(上下文)，因为一个v-for就是一个新的上下文环境，因为v-for会有新的变量放入到this中\r\n                {\r\n                    context: context,\r\n                    // context === this.$dataProxy ? createContext.call(self, this.$dataProxy) : context,\r\n                    el: el,\r\n                    parentVNode: parentVNode,\r\n                    vAttrNames: vAttrNames,\r\n                    renderFun: renderFun,\r\n                })\r\n                : null,\r\n        };\r\n    }\r\n    // 解析v-if\r\n    if (if_1.hasVIf(vAttrNames)) {\r\n        // parse v-if\r\n        var display = if_1.parseVIf.call(this, { context: context, el: el, vAttrNames: vAttrNames });\r\n        // 如果不显示则返回null\r\n        if (!display) {\r\n            return {\r\n                Continue: false,\r\n                VNode: null,\r\n            };\r\n        }\r\n    }\r\n    if (else_1.hasVElse(vAttrNames)) {\r\n        // 合理性判断\r\n        // 如果合理则进行计算\r\n        var entry = else_1.parseVElse.call(this, { context: context, el: el, parentElement: parentElement });\r\n        if (!entry.valid) {\r\n            return {\r\n                Continue: false,\r\n                VNode: null,\r\n            };\r\n        }\r\n        if (!entry.result) {\r\n            return {\r\n                Continue: false,\r\n                VNode: null,\r\n            };\r\n        }\r\n    }\r\n    // 解析v-else-if\r\n    if (else_if_1.hasVElseIf(vAttrNames)) {\r\n        // 合理性判断\r\n        // 如果合理则进行计算\r\n        var entry = else_if_1.parseVElseIf.call(this, { context: context, el: el, parentElement: parentElement });\r\n        if (!entry.valid) {\r\n            return {\r\n                Continue: false,\r\n                VNode: null,\r\n            };\r\n        }\r\n        if (!entry.result) {\r\n            return {\r\n                Continue: false,\r\n                VNode: null,\r\n            };\r\n        }\r\n    }\r\n    // 获取标签名称\r\n    var tagName = el.tagName.toLowerCase();\r\n    // createVNode\r\n    var VNode = vdom_1.createVNode(tagName);\r\n    // 解析v-show\r\n    if (show_1.hasVShow(vAttrNames)) {\r\n        // parse v-show\r\n        show_1.parseVShow.call(this, { context: context, el: el, vAttrNames: vAttrNames, VNode: VNode });\r\n    }\r\n    // 解析v-bind\r\n    if (bind_1.hasVBind(vAttrNames)) {\r\n        // parse v-bind\r\n        bind_1.parseVBind.call(this, { context: context, el: el, vAttrNames: vAttrNames, VNode: VNode });\r\n    }\r\n    // 解析v-model\r\n    // 只有input | textarea | select才进行解析\r\n    if (constants_1.FORM_CONTROL_BINDING_TAG_NAMES.includes(tagName) && model_1.hasVModel(vAttrNames)) {\r\n        model_1.parseVModel.call(self, {\r\n            context: context,\r\n            tagName: tagName,\r\n            vProps: VNode.data.props,\r\n            el: el,\r\n            vAttrNames: vAttrNames,\r\n            VNode: VNode,\r\n        });\r\n    }\r\n    // 解析v-for\r\n    if (on_1.hasVOn(vAttrNames)) {\r\n        // parse v-on\r\n        on_1.parseVOn.call(self, { context: context, el: el, tagName: tagName, vAttrNames: vAttrNames, VNode: VNode });\r\n    }\r\n    // 解析v-html\r\n    // 非表单标签的时候 && 是否是表单控件元素\r\n    if (!model_1.isFormTag(tagName) && html_1.hasVHtml(vAttrNames)) {\r\n        // parse v-html\r\n        html_1.parseVHtml.call(this, { context: context, el: el, vAttrNames: vAttrNames, VNode: VNode });\r\n        // v-html在最后解析，因为v-html的children就是一个文本节点，不需要在进行children的loop\r\n        // return VNode;\r\n    }\r\n    return {\r\n        Continue: true,\r\n        VNode: VNode,\r\n    };\r\n}\r\nexports.renderVAttr = renderVAttr;\r\n/**\r\n * renderAttr - 渲染非指令属性\r\n * @param el - HtmlElement 元素的el\r\n * @param VNode - VNode\r\n */\r\nfunction renderAttr(_a) {\r\n    var el = _a.el, VNode = _a.VNode;\r\n    var self = this;\r\n    var attrNames = util_4.getAttrNames(el);\r\n    if (attrNames.length) {\r\n        attrNames.forEach(function (attrName) {\r\n            var val = el.getAttribute(attrName);\r\n            // key属性\r\n            if (attrName === 'key') {\r\n                VNode.key = val;\r\n            }\r\n            // ref属性\r\n            else if (attrName === 'ref') {\r\n                // ref属性不放入到VNode中\r\n                // 创建当前VNode的hook\r\n                Object.assign(VNode.data.hook, {\r\n                    /**\r\n                     * insert - 元素已插入DOM\r\n                     * @param vnode\r\n                     */\r\n                    insert: function (vnode) {\r\n                        // 保存HtmlElement的el到$refs中\r\n                        self.$refs[val] = vnode.elm;\r\n                    },\r\n                });\r\n            }\r\n            // style属性\r\n            else if (attrName === 'style') {\r\n                // VNode.data.style[attrName] = val;\r\n                val.style\r\n                    .split(regexp_1.STYLE_RULE_SPLIT)\r\n                    .filter(function (t) { return t; })\r\n                    .forEach(function (style) {\r\n                    var entry = style.split(regexp_1.STYLE_RULE_ENTRY_SPLIT).filter(function (t) { return t; });\r\n                    VNode.data.style[entry[0]] = entry[1];\r\n                });\r\n            }\r\n            // class属性\r\n            else if (attrName === 'class') {\r\n                var classNames = val.trim().split(regexp_1.CLASSNAME_SPLIT);\r\n                classNames.forEach(function (className) {\r\n                    VNode.data.class[className] = true;\r\n                });\r\n            }\r\n            // data-*属性\r\n            else if (attrName.startsWith('data-')) {\r\n                VNode.data.dataset[util_1.toCamelCase(attrName.substring('data-'.length))] = val;\r\n            }\r\n            // 其他的属性\r\n            else {\r\n                VNode.data.attrs[attrName] = val;\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.renderAttr = renderAttr;\r\n/**\r\n * renderLoop - 进行递归的渲染\r\n * @param context - 上下文对象\r\n * @param el - HtmlElement 当前节点的el\r\n * @param parentVNode - VNode 父节点VNode\r\n * @param parentElement - HtmlElement 父元素\r\n * @return {VNode | Array<VNode>}\r\n */\r\nfunction renderLoop(_a) {\r\n    var context = _a.context, el = _a.el, parentVNode = _a.parentVNode, parentElement = _a.parentElement;\r\n    // 文本节点\r\n    if (vue_util_1.isTextNode(el)) {\r\n        // 文本节点的渲染\r\n        return renderTextNode_1.renderTextNode.call(this, { context: context, el: el });\r\n    }\r\n    var isComponent = false;\r\n    var isVueIns = util_2.isVueInstance(this);\r\n    // this是否是vue实例\r\n    if (isVueIns) {\r\n        // 在vue实例下判断是否是组件节点\r\n        isComponent = util_3.isComponentNodeByVue(el);\r\n    }\r\n    // 其他的情况\r\n    else {\r\n        var isComponentIns = util_3.isComponentInstance(this);\r\n        // this是否是component实例\r\n        if (isComponentIns) {\r\n            // 在component实例下判断是否是组件节点\r\n            isComponent = util_3.isComponentNodeByComponent(el, this.$getComponentsConfig());\r\n        }\r\n        // this既不是vue实例也不是component实例\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    if (!isComponent) {\r\n        // 如果是template元素\r\n        if (vue_util_1.isTemplateNode(el)) {\r\n            return renderTemplateNode_1.renderTemplateNode.call(this, { context: context, el: el, parentVNode: parentVNode, parentElement: parentElement });\r\n        }\r\n        // 如果是slot元素 vue实例没有slot元素\r\n        if (!isVueIns && vue_util_1.isSlotNode(el)) {\r\n            return renderSlotNode_1.renderSlotNode.call(this, { context: context, el: el, parentVNode: parentVNode, parentElement: parentElement });\r\n        }\r\n        // 如果是component元素\r\n        if (vue_util_1.isDynamicComponentNode(el)) {\r\n            return renderDynamicComponentNode_1.renderDynamicComponentNode.call(this, { context: context, el: el, parentVNode: parentVNode, parentElement: parentElement });\r\n        }\r\n        // 如果是router-link元素\r\n        if (vue_util_1.isRouterLinkNode(el)) {\r\n            return renderRouterLinkNode_1.renderRouterLinkNode.call(this, { context: context, el: el, parentVNode: parentVNode, parentElement: parentElement });\r\n        }\r\n        // 如果是router-view元素\r\n        if (vue_util_1.isRouterViewNode(el)) {\r\n            return renderRouterViewNode_1.renderRouterViewNode.call(this, { context: context, el: el, parentVNode: parentVNode, parentElement: parentElement });\r\n        }\r\n        // 如果是Html元素\r\n        if (vue_util_1.isElementNode(el)) {\r\n            // 是元素不是组件节点\r\n            return renderElementNode_1.renderElementNode.call(this, { context: context, el: el, parentVNode: parentVNode, parentElement: parentElement });\r\n        }\r\n    }\r\n    else {\r\n        // 自定义节点(Component)\r\n        // 例如：\r\n        // <div v-bind:id=\"id1\">\r\n        //  <div v-bind:id=\"id2\">\r\n        //    <my-component v-bind:id=\"id\" name=\"name\" v-show=\"flag\" v-if=\"display\" v-on=\"\"></my-component>\r\n        //  </div>\r\n        // </div>\r\n        return renderComponentNode_1.renderComponentNode.call(this, { context: context, el: el, parentVNode: parentVNode, parentElement: parentElement });\r\n    }\r\n    return null;\r\n}\r\nexports.renderLoop = renderLoop;\r\n"],"names":["Object","defineProperty","exports","value","renderLoop","renderAttr","renderVAttr","vue_util_1","require","util_1","util_2","util_3","renderComponentNode_1","renderDynamicComponentNode_1","renderElementNode_1","renderSlotNode_1","renderTemplateNode_1","renderTextNode_1","renderRouterLinkNode_1","renderRouterViewNode_1","util_4","for_1","if_1","else_1","else_if_1","vdom_1","show_1","bind_1","constants_1","model_1","on_1","html_1","regexp_1","_a","el","parentVNode","parentElement","context","renderFun","vAttrNames","getVAttrNames","length","Continue","VNode","hasVFor","parseVFor","call","this","hasVIf","parseVIf","hasVElse","entry","parseVElse","valid","result","hasVElseIf","parseVElseIf","tagName","toLowerCase","createVNode","hasVShow","parseVShow","hasVBind","parseVBind","FORM_CONTROL_BINDING_TAG_NAMES","includes","hasVModel","parseVModel","vProps","data","props","hasVOn","parseVOn","isFormTag","hasVHtml","parseVHtml","self","attrNames","getAttrNames","forEach","attrName","val","getAttribute","key","assign","hook","insert","vnode","$refs","elm","style","split","STYLE_RULE_SPLIT","filter","t","STYLE_RULE_ENTRY_SPLIT","trim","CLASSNAME_SPLIT","className","class","startsWith","dataset","toCamelCase","substring","attrs","isTextNode","renderTextNode","isComponent","isVueIns","isVueInstance","isComponentNodeByVue","isComponentInstance","isComponentNodeByComponent","$getComponentsConfig","renderComponentNode","isTemplateNode","renderTemplateNode","isSlotNode","renderSlotNode","isDynamicComponentNode","renderDynamicComponentNode","isRouterLinkNode","renderRouterLinkNode","isRouterViewNode","renderRouterViewNode","isElementNode","renderElementNode"],"mappings":"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"}