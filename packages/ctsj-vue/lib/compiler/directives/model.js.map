{"version":3,"file":"model.js","sources":["compiler/directives/model.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.filterChain = exports.isFormTag = exports.parseVModel = exports.getVModelEntrys = exports.hasVModel = void 0;\r\nvar util_1 = require(\"../../shared/util\");\r\nvar util_2 = require(\"./util\");\r\nvar constants_1 = require(\"../../shared/constants\");\r\n/**\r\n * hasVModel\r\n * @param attrNames\r\n * @return {*}\r\n */\r\nfunction hasVModel(attrNames) {\r\n    return util_2.hasVAttr(attrNames, constants_1.DIRECT_PREFIX + \"model\");\r\n}\r\nexports.hasVModel = hasVModel;\r\n/**\r\n * getInputType\r\n * @param context\r\n * @param el\r\n * @return String\r\n */\r\nfunction getInputType(context, el) {\r\n    return getInputProp({ context: context, el: el, propName: 'type' }) || 'text';\r\n}\r\n/**\r\n * getInputValue\r\n * @param context\r\n * @param el\r\n * @return String\r\n */\r\nfunction getInputValue(context, el) {\r\n    return getInputProp({ context: context, el: el, propName: 'value' });\r\n}\r\n/**\r\n * getInputProp\r\n * @param context\r\n * @param el\r\n * @param propName\r\n * @return {string|*}\r\n */\r\nfunction getInputProp(_a) {\r\n    var context = _a.context, el = _a.el, propName = _a.propName;\r\n    var attrNames = el.getAttributeNames();\r\n    if (attrNames.includes(propName)) {\r\n        return el.getAttribute(propName);\r\n    }\r\n    if (attrNames.includes(constants_1.DIRECT_PREFIX + \"bind:\" + propName)) {\r\n        var value = el.getAttribute(constants_1.DIRECT_PREFIX + \"bind:\" + propName);\r\n        return util_1.execExpression(context, value);\r\n    }\r\n    return '';\r\n}\r\n/**\r\n * hasProp - 是否存在指定的属性\r\n * @param el\r\n * @param prop\r\n * @return {boolean}\r\n */\r\nfunction hasProp(_a) {\r\n    var el = _a.el, prop = _a.prop;\r\n    var attrNames = el.getAttributeNames();\r\n    var exists = attrNames.includes(prop);\r\n    if (!exists) {\r\n        exists = attrNames.includes(constants_1.DIRECT_PREFIX + \"bind:\" + prop);\r\n    }\r\n    return exists;\r\n}\r\nfunction getVModelEntrys(_a) {\r\n    var el = _a.el, vAttrNames = _a.vAttrNames;\r\n    var attrs = vAttrNames.filter(function (n) { return n.indexOf(constants_1.DIRECT_PREFIX + \"model\") !== -1; });\r\n    if (!attrs.length)\r\n        return null;\r\n    // 取出最后一个attr\r\n    var attrName = attrs[attrs.length - 1];\r\n    // 获取v-model=\"xxx\" 的 xxx\r\n    return util_2.getDirectiveEntry(el, attrName);\r\n}\r\nexports.getVModelEntrys = getVModelEntrys;\r\n/**\r\n * parseVModel\r\n * @param context\r\n * @param el\r\n * @param vAttrNames\r\n * @param tagName\r\n * @param VNode\r\n * @return {*}\r\n */\r\nfunction parseVModel(_a) {\r\n    var context = _a.context, el = _a.el, vAttrNames = _a.vAttrNames, tagName = _a.tagName, VNode = _a.VNode;\r\n    var self = this;\r\n    // const attrs = vAttrNames.filter((n) => n.indexOf(`${DIRECT_PREFIX}model`) !== -1);\r\n    //\r\n    // if (!attrs.length) return null;\r\n    //\r\n    // // 取出最后一个attr\r\n    // const attrName = attrs[attrs.length - 1];\r\n    // 获取v-model=\"xxx\" 的 xxx\r\n    // const entry = getDirectiveEntry(el, attrName);\r\n    var entry = getVModelEntrys({ el: el, vAttrNames: vAttrNames });\r\n    if (!entry)\r\n        return null;\r\n    // v-model的值\r\n    var value = util_1.execExpression(context, entry.expression);\r\n    var inputType = getInputType(context, el);\r\n    var inputValue = getInputValue(context, el);\r\n    // 1.赋值\r\n    if (tagName === 'input') {\r\n        // radio | checkbox\r\n        if (constants_1.FORM_CONTROL_CHECKED_TAG_NAMES.includes(inputType)) {\r\n            // value属性\r\n            if (inputValue) {\r\n                //  <input type=\"radio\" value=\"1\" v-model=\"sex\" />男\r\n                //  <input type=\"radio\" value=\"2\" v-model=\"sex\" />女\r\n                if (inputType === 'radio') {\r\n                    VNode.data.props.checked = value == inputValue;\r\n                }\r\n                // checkbox\r\n                //  <input type=\"checkbox\" value=\"1\" v-model=\"data\" />java\r\n                //  <input type=\"checkbox\" value=\"2\" v-model=\"data\" />c++\r\n                //  <input type=\"checkbox\" value=\"3\" v-model=\"data\" />javascript\r\n                else if (inputType === 'checkbox') {\r\n                    if (util_1.isArray(value)) {\r\n                        VNode.data.props.checked = value.includes(inputValue);\r\n                    }\r\n                    else {\r\n                        VNode.data.props.checked = value == inputValue;\r\n                    }\r\n                }\r\n            }\r\n            // 没有value属性\r\n            else {\r\n                VNode.data.props.checked = value;\r\n            }\r\n        }\r\n        // text | number | ...\r\n        else {\r\n            VNode.data.props.value = value;\r\n        }\r\n    }\r\n    // textarea\r\n    else if (tagName === 'textarea') {\r\n        VNode.data.props.value = value;\r\n    }\r\n    // select\r\n    else if (tagName === 'select') {\r\n        //  <select>\r\n        //    <option>java</option>\r\n        //    <option>c++</option>\r\n        //    <option>javascript</option>\r\n        //  </select>\r\n        // 获取select下所有的option\r\n        var optionEls = Array.from(el.querySelectorAll('option'));\r\n        optionEls.forEach(function (optionEl) {\r\n            // 获取option的value value表示的是text或value\r\n            var val = optionEl.value.trim();\r\n            // model的值是数组\r\n            if (util_1.isArray(value)) {\r\n                if (value.includes(val)) {\r\n                    optionEl.setAttribute('selected', 'selected');\r\n                }\r\n            }\r\n            // model的值不是数组\r\n            else if (val == value) {\r\n                optionEl.setAttribute('selected', 'selected');\r\n            }\r\n        });\r\n    }\r\n    var lazy = entry.modifiers.lazy;\r\n    // 2.事件\r\n    // select标签\r\n    if (tagName === 'select') {\r\n        VNode.data.on.change = function (e) {\r\n            var selectedOptions = e.target.selectedOptions;\r\n            // 多选的模式\r\n            if (hasProp({ el: el, prop: 'multiple' })) {\r\n                // model的值是数组\r\n                if (util_1.isArray(value)) {\r\n                    self.$dataProxy[entry.expression] = Array.from(selectedOptions).map(function (selectedOption) {\r\n                        return filterChain(selectedOption.value, entry);\r\n                    });\r\n                }\r\n                // 不是数组不处理\r\n            }\r\n            // 非多选的模式\r\n            else {\r\n                // 不是数组才处理\r\n                if (!util_1.isArray(value)) {\r\n                    self.$dataProxy[entry.expression] = filterChain(selectedOptions[0].value, entry);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    // input标签\r\n    else if (tagName === 'input') {\r\n        // radio | checkbox\r\n        if (constants_1.FORM_CONTROL_CHECKED_TAG_NAMES.includes(inputType)) {\r\n            // 有value属性\r\n            if (inputValue) {\r\n                //  <input type=\"radio\" value=\"1\" v-model=\"sex\" />男\r\n                //  <input type=\"radio\" value=\"2\" v-model=\"sex\" />女\r\n                if (inputType === 'radio') {\r\n                    VNode.data.on.change = function (e) {\r\n                        self.$dataProxy[entry.expression] = e.target.checked ? inputValue : '';\r\n                    };\r\n                }\r\n                //  <input type=\"checkbox\" value=\"1\" v-model=\"data\" />java\r\n                //  <input type=\"checkbox\" value=\"2\" v-model=\"data\" />c++\r\n                //  <input type=\"checkbox\" value=\"3\" v-model=\"data\" />javascript\r\n                else if (inputType === 'checkbox') {\r\n                    if (util_1.isArray(value)) {\r\n                        VNode.data.on.change = function (e) {\r\n                            if (e.target.checked) {\r\n                                self.$dataProxy[entry.expression].push(inputValue);\r\n                            }\r\n                            else {\r\n                                var deleteIndex = self.$dataProxy[entry.expression].indexOf(inputValue);\r\n                                if (deleteIndex !== -1) {\r\n                                    self.$dataProxy[entry.expression].splice(deleteIndex, 1);\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n                    // 不是数组\r\n                    else {\r\n                        VNode.data.on.change = function (e) {\r\n                            self.$dataProxy[entry.expression] = e.target.checked ? inputValue : '';\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            // 没有value属性\r\n            else {\r\n                VNode.data.on.change = function (e) {\r\n                    self.$dataProxy[entry.expression] = e.target.checked;\r\n                };\r\n            }\r\n        }\r\n        // text | number ... lazy\r\n        else if (lazy) {\r\n            VNode.data.on.change = function (e) {\r\n                self.$dataProxy[entry.expression] = filterChain(e.target.value, entry);\r\n            };\r\n        }\r\n        // text | number ... 没有lazy\r\n        else {\r\n            VNode.data.on.input = function (e) {\r\n                self.$dataProxy[entry.expression] = filterChain(e.target.value, entry);\r\n            };\r\n        }\r\n    }\r\n    // textarea标签 lazy\r\n    else if (lazy) {\r\n        VNode.data.on.change = function (e) {\r\n            self.$dataProxy[entry.expression] = filterChain(e.target.value, entry);\r\n        };\r\n    }\r\n    // textarea标签 没有lazy\r\n    else {\r\n        VNode.data.on.input = function (e) {\r\n            self.$dataProxy[entry.expression] = filterChain(e.target.value, entry);\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nexports.parseVModel = parseVModel;\r\n/**\r\n * isFormTag\r\n * @param tagName\r\n * @return {boolean}\r\n */\r\nfunction isFormTag(tagName) {\r\n    return constants_1.FORM_CONTROL_BINDING_TAG_NAMES.includes(tagName);\r\n}\r\nexports.isFormTag = isFormTag;\r\n/**\r\n * filterChain\r\n * @param value\r\n * @param directiveEntry\r\n */\r\nfunction filterChain(value, directiveEntry) {\r\n    var result = value;\r\n    var chains = [\r\n        {\r\n            condition: directiveEntry.modifiers.trim,\r\n            handler: function (val) {\r\n                return val.trim();\r\n            },\r\n        },\r\n        {\r\n            condition: directiveEntry.modifiers.number,\r\n            handler: function (val) {\r\n                return Number(val);\r\n            },\r\n        },\r\n    ];\r\n    chains.forEach(function (_a) {\r\n        var condition = _a.condition, handler = _a.handler;\r\n        if (condition) {\r\n            result = handler(result);\r\n        }\r\n    });\r\n    return result;\r\n}\r\nexports.filterChain = filterChain;\r\n"],"names":["Object","defineProperty","exports","value","filterChain","isFormTag","parseVModel","getVModelEntrys","hasVModel","util_1","require","util_2","constants_1","attrNames","hasVAttr","DIRECT_PREFIX","getInputType","context","el","getInputProp","propName","getInputValue","_a","getAttributeNames","includes","getAttribute","execExpression","hasProp","prop","attrs","vAttrNames","filter","n","indexOf","length","attrName","getDirectiveEntry","tagName","VNode","self","this","entry","expression","inputType","inputValue","FORM_CONTROL_CHECKED_TAG_NAMES","data","props","checked","isArray","Array","from","querySelectorAll","forEach","optionEl","val","trim","setAttribute","lazy","modifiers","on","change","e","selectedOptions","target","$dataProxy","map","selectedOption","push","deleteIndex","splice","input","FORM_CONTROL_BINDING_TAG_NAMES","directiveEntry","result","condition","handler","number","Number"],"mappings":"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"}