{"version":3,"file":"bind.js","sources":["compiler/directives/bind.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseVBind = exports.getVBindEntrys = exports.hasVBind = void 0;\r\nvar proxy_1 = require(\"../../core/proxy\");\r\nvar util_1 = require(\"../../core/component/util\");\r\nvar util_2 = require(\"./util\");\r\nvar constants_1 = require(\"../../shared/constants\");\r\nvar util_3 = require(\"../../shared/util\");\r\n/**\r\n * hasVBind - 是否存在v-bind属性\r\n * @param attrNames - Array 所有的指令属性\r\n * @return {boolean}\r\n */\r\nfunction hasVBind(attrNames) {\r\n    return util_2.hasVAttr(attrNames, constants_1.DIRECT_PREFIX + \"bind\");\r\n}\r\nexports.hasVBind = hasVBind;\r\n/**\r\n * getVBindEntrys - 获取所有v-bind属性的实体集合\r\n * @param context - Object 上下文对象\r\n * @param el - HtmlElement\r\n * @param vAttrNames - Array 所有指令属性的集合\r\n * @return Array\r\n */\r\nfunction getVBindEntrys(_a) {\r\n    var context = _a.context, el = _a.el, vAttrNames = _a.vAttrNames;\r\n    // 获取所有v-bind标签\r\n    var bindAttrs = vAttrNames.filter(function (n) { return n.indexOf(constants_1.DIRECT_PREFIX + \"bind\") !== -1; });\r\n    var cloneEl = document.createElement(el.tagName);\r\n    var resultAttrs = [];\r\n    bindAttrs.forEach(function (bindAttr) {\r\n        // 如果bindAttr是v-bind对象绑定\r\n        if (bindAttr === constants_1.DIRECT_PREFIX + \"bind\") {\r\n            var attrValue_1 = el.getAttribute(bindAttr);\r\n            var value = util_3.execExpression(context, attrValue_1);\r\n            // 如果这个值是Object\r\n            if (util_3.isObject(value)) {\r\n                Object.keys(value).forEach(function (key) {\r\n                    if (proxy_1.isProxyProperty(key)) {\r\n                        // key是驼峰命名的需要转换成xxx-xxx形式\r\n                        var bindKey = constants_1.DIRECT_PREFIX + \"bind:\" + util_1.pascalCaseToKebabCase(key);\r\n                        cloneEl.setAttribute(bindKey, attrValue_1 + \".\" + key);\r\n                        resultAttrs.push(bindKey);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        // bindAttr是v-bind:xxx\r\n        else {\r\n            cloneEl.setAttribute(bindAttr, el.getAttribute(bindAttr));\r\n            resultAttrs.push(bindAttr);\r\n        }\r\n    });\r\n    return resultAttrs.map(function (attrName) {\r\n        // 获取一个v-bind的实体\r\n        var entry = util_2.getDirectiveEntry(cloneEl, attrName);\r\n        // arg是class或者是style\r\n        if (entry.arg === 'class' || entry.arg === 'style') {\r\n            // arg是class\r\n            if (entry.arg === 'class') {\r\n                if (entry.expression.startsWith('{') && entry.expression.endsWith('}')) {\r\n                    // { active: isActive, 'text-danger': hasError }\r\n                    entry.expression = \"Object(\" + entry.expression + \")\";\r\n                }\r\n                // <div v-bind:class=\"classObject\"></div>\r\n                // [activeClass, errorClass]\r\n                entry.value = util_3.execExpression(context, entry.expression);\r\n                if (util_3.isArray(entry.value)) {\r\n                    var classNames = entry.value;\r\n                    entry.value = {};\r\n                    classNames.forEach(function (className) {\r\n                        entry.value[className] = true;\r\n                    });\r\n                }\r\n            }\r\n            // arg是style\r\n            if (entry.arg === 'style') {\r\n                if (entry.expression.indexOf('{') === 0 &&\r\n                    entry.expression.lastIndexOf('}') === entry.expression.length - 1) {\r\n                    entry.expression = \"Object(\" + entry.expression + \")\";\r\n                }\r\n                entry.value = util_3.execExpression(context, entry.expression);\r\n            }\r\n        }\r\n        else if (entry.arg) {\r\n            // 其他的情况\r\n            entry.value = util_3.execExpression(context, entry.expression);\r\n        }\r\n        return entry;\r\n    });\r\n}\r\nexports.getVBindEntrys = getVBindEntrys;\r\n/**\r\n * parseVBind - 解析v-bind\r\n * @param context - Object 上下文对象\r\n * @param el - HtmlElement\r\n * @param vAttrNames - Array 所有指令的集合\r\n * @param VNode - VNode 当前的VNode节点\r\n * @return {Object}\r\n */\r\nfunction parseVBind(_a) {\r\n    var context = _a.context, el = _a.el, vAttrNames = _a.vAttrNames, VNode = _a.VNode;\r\n    var entrys = getVBindEntrys.call(this, { context: context, el: el, vAttrNames: vAttrNames });\r\n    entrys.forEach(function (entry) {\r\n        if (entry.arg === 'key') {\r\n            VNode.key = entry.value;\r\n        }\r\n        else if (entry.arg === 'class') {\r\n            Object.assign(VNode.data.class, entry.value);\r\n        }\r\n        else if (entry.arg === 'style') {\r\n            Object.assign(VNode.data.style, entry.value);\r\n        }\r\n        else if (entry.arg.startsWith('data-')) {\r\n            VNode.data.dataset[util_3.toCamelCase(entry.arg.substring('data-'.length))] = entry.value;\r\n        }\r\n        else {\r\n            VNode.data.props[entry.arg] = entry.value;\r\n        }\r\n    });\r\n    return entrys;\r\n}\r\nexports.parseVBind = parseVBind;\r\n"],"names":["Object","defineProperty","exports","value","parseVBind","getVBindEntrys","hasVBind","proxy_1","require","util_1","util_2","constants_1","util_3","attrNames","hasVAttr","DIRECT_PREFIX","_a","context","el","bindAttrs","vAttrNames","filter","n","indexOf","cloneEl","document","createElement","tagName","resultAttrs","forEach","bindAttr","attrValue_1","getAttribute","execExpression","isObject","keys","key","bindKey","isProxyProperty","pascalCaseToKebabCase","setAttribute","push","map","attrName","entry","getDirectiveEntry","arg","expression","startsWith","endsWith","isArray","classNames","className","lastIndexOf","length","VNode","entrys","call","this","assign","data","class","style","dataset","toCamelCase","substring","props"],"mappings":"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"}