{"version":3,"file":"util.js","sources":["compiler/directives/util.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getAttributeName = exports.getAttribute = exports.getKey = exports.getAttrEntrys = exports.getDirectiveEntry = exports.getAttrNames = exports.getVAttrNames = exports.getDirectModifiers = exports.getDirectArg = exports.getDirectName = exports.hasAttr = exports.hasVAttr = void 0;\r\nvar util_1 = require(\"../../shared/util\");\r\nvar constants_1 = require(\"../../shared/constants\");\r\n/**\r\n * hasVAttr - 查看attrName是否是指令属性\r\n * @param attrNames Array<string> 所有属性的集合\r\n * @param attrName string 属性的名称\r\n * @return {boolean}\r\n */\r\nfunction hasVAttr(attrNames, attrName) {\r\n    return attrNames.some(function (itemAttrName) { return itemAttrName.startsWith(attrName); });\r\n}\r\nexports.hasVAttr = hasVAttr;\r\n/**\r\n * hasAttr - 是否存在指定的属性\r\n * @param attrName - string 属性名称\r\n * @param el - HTMLElement el\r\n * @return {boolean}\r\n */\r\nfunction hasAttr(attrName, el) {\r\n    var attrNames = el.getAttributeNames();\r\n    return attrNames.some(function (curAttrName) {\r\n        return curAttrName.startsWith(constants_1.DIRECT_PREFIX + \"bind:\" + attrName) || curAttrName === attrName;\r\n    });\r\n}\r\nexports.hasAttr = hasAttr;\r\n/**\r\n * getDirectName - 在指令属性中获取指令的名称\r\n * 例如：v-bind:id 获取的是bind\r\n * @param attrName - string 指令属性名称\r\n * @return {string}\r\n */\r\nfunction getDirectName(attrName) {\r\n    var directSymbolIndex = -1;\r\n    for (var i = 0; i < constants_1.DIRECT_SYMBOLS.length; i++) {\r\n        var directSymbol = constants_1.DIRECT_SYMBOLS[i];\r\n        directSymbolIndex = attrName.indexOf(directSymbol, constants_1.DIRECT_PREFIX.length);\r\n        if (directSymbolIndex !== -1)\r\n            break;\r\n    }\r\n    return attrName.substring(constants_1.DIRECT_PREFIX.length, directSymbolIndex === -1 ? attrName.length : directSymbolIndex);\r\n}\r\nexports.getDirectName = getDirectName;\r\n/**\r\n * getDirectArg - 获取指令属性中的arg\r\n * 例如：v-bind:id=\"\" 获取的是id\r\n * @param attrName - string 指令属性\r\n * @return {string}\r\n */\r\nfunction getDirectArg(attrName) {\r\n    var startIndex = attrName.indexOf(constants_1.DIRECT_SYMBOLS[0]);\r\n    if (startIndex === -1)\r\n        return '';\r\n    var endIndex = attrName.indexOf(constants_1.DIRECT_SYMBOLS[1], startIndex + 1);\r\n    return attrName.substring(startIndex + 1, endIndex === -1 ? attrName.length : endIndex);\r\n}\r\nexports.getDirectArg = getDirectArg;\r\n/**\r\n * getDirectModifiers - 获取指令属性中的modifiers\r\n * 例如 v-on:click.stop 获取的是{stop:true}\r\n * @param attrName - string 指令属性\r\n * @return {Object}\r\n */\r\nfunction getDirectModifiers(attrName) {\r\n    var index = attrName.indexOf(constants_1.DIRECT_SYMBOLS[1]);\r\n    if (index === -1)\r\n        return {};\r\n    var substr = attrName.substring(index);\r\n    var arr = substr.split(constants_1.DIRECT_SYMBOLS[1]).slice(1);\r\n    var modifiers = {};\r\n    arr.forEach(function (modifier) {\r\n        modifiers[modifier] = true;\r\n    });\r\n    return modifiers;\r\n}\r\nexports.getDirectModifiers = getDirectModifiers;\r\n/**\r\n * getVAttrNames 获取所有指令的属性名\r\n * @param el - HtmlElement 元素\r\n * @return {NamedNodeMap}\r\n */\r\nfunction getVAttrNames(el) {\r\n    return el.getAttributeNames().filter(function (attrName) { return attrName.startsWith(constants_1.DIRECT_PREFIX); });\r\n}\r\nexports.getVAttrNames = getVAttrNames;\r\n/**\r\n * getAttrNames 获取非指令的属性名\r\n * @param el - HtmlElement 元素\r\n * @return {NamedNodeMap}\r\n */\r\nfunction getAttrNames(el) {\r\n    return el\r\n        .getAttributeNames()\r\n        .filter(function (attrName) { return attrName.indexOf(constants_1.DIRECT_PREFIX) === -1 && attrName !== constants_1.GROUP_KEY_NAME; });\r\n}\r\nexports.getAttrNames = getAttrNames;\r\n/**\r\n * getDirectiveEntry - 根据vAttrName获取指令实体\r\n * @param el - HtmlElement\r\n * @param attrName - string 指令名称 如：v-on:click.stop.prev\r\n * @return {Object}\r\n */\r\nfunction getDirectiveEntry(el, attrName) {\r\n    return {\r\n        name: getDirectName(attrName),\r\n        value: '',\r\n        expression: el.getAttribute(attrName),\r\n        arg: getDirectArg(attrName),\r\n        modifiers: getDirectModifiers(attrName),\r\n    };\r\n}\r\nexports.getDirectiveEntry = getDirectiveEntry;\r\n/**\r\n * getAttrEntrys - 获取非指令属性的属性集合\r\n * @param el - HtmlElement\r\n * @return Array\r\n */\r\nfunction getAttrEntrys(el) {\r\n    var attrNames = getAttrNames(el);\r\n    if (attrNames.length) {\r\n        return attrNames.map(function (attrName) { return ({\r\n            name: attrName,\r\n            value: el.getAttribute(attrName),\r\n        }); });\r\n    }\r\n    return [];\r\n}\r\nexports.getAttrEntrys = getAttrEntrys;\r\n/**\r\n * getKey - 获取el的key属性\r\n * @param context - Object 上下文对象\r\n * @param el - HtmlElement\r\n * @return string\r\n */\r\nfunction getKey(_a) {\r\n    var context = _a.context, el = _a.el;\r\n    //  <component1 v-bind:key=\"\"\r\n    var attrNames = el.getAttributeNames();\r\n    // 元素有key属性\r\n    if (attrNames.indexOf(constants_1.DIRECT_PREFIX + \"bind:key\") !== -1) {\r\n        return util_1.execExpression(context, el.getAttribute(constants_1.DIRECT_PREFIX + \"bind:key\"));\r\n    }\r\n    if (el.getAttribute('key')) {\r\n        return el.getAttribute('key').trim();\r\n    }\r\n    return null;\r\n}\r\nexports.getKey = getKey;\r\n/**\r\n * getAttribute - 获取指定属性的值\r\n * @param context - Object 上下文对象\r\n * @param attrName - string 属性的名称\r\n * @param el - HtmlElement 元素\r\n * @return String\r\n */\r\nfunction getAttribute(_a) {\r\n    var context = _a.context, attrName = _a.attrName, el = _a.el;\r\n    var attrNames = el.getAttributeNames();\r\n    var index = attrNames.findIndex(function (curAttrName) { return curAttrName === constants_1.DIRECT_PREFIX + \"bind:\" + attrName; });\r\n    if (index !== -1) {\r\n        var value = el.getAttribute(attrNames[index]).trim();\r\n        return util_1.execExpression(context, value);\r\n    }\r\n    return el.getAttribute(attrName);\r\n}\r\nexports.getAttribute = getAttribute;\r\n/**\r\n * getAttributeName - 获取attrName属性的名字\r\n * @param attrName - String\r\n * @param el - HtmlElement\r\n * @return string\r\n */\r\nfunction getAttributeName(_a) {\r\n    var attrName = _a.attrName, el = _a.el;\r\n    var attrNames = el.getAttributeNames();\r\n    var index = attrNames.findIndex(function (curAttrName) { return curAttrName === constants_1.DIRECT_PREFIX + \"bind:\" + attrName; });\r\n    if (index !== -1) {\r\n        return attrNames[index];\r\n    }\r\n    return attrName;\r\n}\r\nexports.getAttributeName = getAttributeName;\r\n"],"names":["Object","defineProperty","exports","value","getAttributeName","getAttribute","getKey","getAttrEntrys","getDirectiveEntry","getAttrNames","getVAttrNames","getDirectModifiers","getDirectArg","getDirectName","hasAttr","hasVAttr","util_1","require","constants_1","attrNames","attrName","some","itemAttrName","startsWith","el","getAttributeNames","curAttrName","DIRECT_PREFIX","directSymbolIndex","i","DIRECT_SYMBOLS","length","directSymbol","indexOf","substring","startIndex","endIndex","index","arr","split","slice","modifiers","forEach","modifier","filter","GROUP_KEY_NAME","name","expression","arg","map","_a","context","execExpression","trim","findIndex"],"mappings":"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"}