{"version":3,"file":"on.js","sources":["compiler/directives/on.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseVOn = exports.executeVOn = exports.executeExecutionContextVOn = exports.getVOnEntrys = exports.hasVOn = void 0;\r\nvar vue_util_1 = require(\"@ctsj/vue-util\");\r\nvar model_1 = require(\"./model\");\r\nvar util_1 = require(\"../../shared/util\");\r\nvar proxy_1 = require(\"../../core/proxy\");\r\nvar util_2 = require(\"./util\");\r\nvar constants_1 = require(\"../../shared/constants\");\r\n/**\r\n * hasVOn - 是否有v-on属性\r\n * @param attrNames - 所有的指令属性集合\r\n * @return {boolean}\r\n */\r\nfunction hasVOn(attrNames) {\r\n    return util_2.hasVAttr(attrNames, constants_1.DIRECT_PREFIX + \"on\");\r\n}\r\nexports.hasVOn = hasVOn;\r\n/**\r\n * getVOnEntrys\r\n * @param el\r\n * @param vAttrNames\r\n * @return {Array}\r\n */\r\nfunction getVOnEntrys(_a) {\r\n    var el = _a.el, vAttrNames = _a.vAttrNames;\r\n    var onAttrs = vAttrNames.filter(function (n) { return n.indexOf(constants_1.DIRECT_PREFIX + \"on\") !== -1; });\r\n    return onAttrs.map(function (attrName) {\r\n        // entry.value = execExpression(context, entry.expression);\r\n        return util_2.getDirectiveEntry(el, attrName);\r\n    });\r\n}\r\nexports.getVOnEntrys = getVOnEntrys;\r\n/**\r\n * executeExecutionContextVOn - 执行v-on内部的逻辑 带执行上下文\r\n * @param context - Object 上下文对象\r\n * @param entry - Object v-on实体对象\r\n * @param e - Event Html事件的对象\r\n * @param argv - Array 调用函数的参数\r\n */\r\nfunction executeExecutionContextVOn(_a) {\r\n    var context = _a.context, entry = _a.entry, e = _a.e, _b = _a.argv, argv = _b === void 0 ? [] : _b;\r\n    var self = this;\r\n    // 下面的代码是执行v-on:click=\"\" 里面代码具体的逻辑\r\n    // 1.a + 1 -> 表达式方式\r\n    // 2.display -> methods函数形式\r\n    // 3.display(a + $event) -> methods函数调用形式\r\n    // 函数名形式\r\n    // TODO: HTML的事件处理函数\r\n    if ((entry.expression in (self.$config.methods || {}) &&\r\n        vue_util_1.isFunction((self.$config.methods || {})[entry.expression])) ||\r\n        (entry.expression in this && vue_util_1.isFunction(this[entry.expression]))) {\r\n        util_1.createExecutionContext.call(this, this, function () {\r\n            // 函数名形式 直接调用\r\n            this[entry.expression].call(this.$dataProxy, e || (argv && argv.length ? argv[0] : null));\r\n        });\r\n    }\r\n    // 其他的形式\r\n    else {\r\n        // 表达式(1 + 1)\r\n        //\r\n        // item(item1,$event,3)\r\n        //\r\n        // 这个地方会创建新的context避免set陷阱函数执行\r\n        util_1.createExecutionContext.call(this, this, function () {\r\n            util_1.execExpression.call(this, e\r\n                ? proxy_1.createContext(context, { $event: e })\r\n                : argv && argv.length\r\n                    ? proxy_1.createContext(context, { $event: argv[0] })\r\n                    : context, entry.expression);\r\n        });\r\n    }\r\n}\r\nexports.executeExecutionContextVOn = executeExecutionContextVOn;\r\n/**\r\n * executeVOn - 执行v-on内部的逻辑 不带执行上下文\r\n * @param context - Object 上下文对象\r\n * @param entry - Object v-on实体对象\r\n * @param e - Event Html事件的对象\r\n * @param argv - Array 调用函数的参数\r\n */\r\nfunction executeVOn(_a) {\r\n    var context = _a.context, entry = _a.entry, e = _a.e, _b = _a.argv, argv = _b === void 0 ? [] : _b;\r\n    var self = this;\r\n    // 下面的代码是执行v-on:click=\"\" 里面代码具体的逻辑\r\n    // 1.a + 1 -> 表达式方式\r\n    // 2.display -> methods函数形式\r\n    // 3.display(a + $event) -> methods函数调用形式\r\n    // 函数名形式\r\n    // TODO: HTML的事件处理函数\r\n    if (entry.expression in self.$config.methods) {\r\n        // 函数名形式 直接调用\r\n        this[entry.expression].apply(this.$dataProxy, e || (argv && argv.length ? argv[0] : null));\r\n    }\r\n    // 其他的形式\r\n    else {\r\n        // 表达式(1 + 1)\r\n        //\r\n        // item(item1,$event,3)\r\n        //\r\n        // 这个地方会创建新的context避免set陷阱函数执行\r\n        util_1.execExpression.call(this, e\r\n            ? proxy_1.createContext(context, { $event: e })\r\n            : argv && argv.length\r\n                ? proxy_1.createContext(context, { $event: argv[0] })\r\n                : context, entry.expression);\r\n    }\r\n}\r\nexports.executeVOn = executeVOn;\r\n/**\r\n * parseVOn\r\n * @param context\r\n * @param el\r\n * @param vAttrNames\r\n * @param tagName\r\n * @param VNode\r\n * @return {Array}\r\n */\r\nfunction parseVOn(_a) {\r\n    var context = _a.context, el = _a.el, tagName = _a.tagName, vAttrNames = _a.vAttrNames, VNode = _a.VNode;\r\n    // 可以有多个v-on\r\n    // <div v-on:click=\"count + 1\" v-on:blur=\"\" v-on:change=\"\" v-on:input=\"\"></div>\r\n    var self = this;\r\n    // const onAttrs = vAttrNames.filter((n) => n.indexOf(`${DIRECT_PREFIX}on`) !== -1);\r\n    // const entrys = onAttrs.map((attrName) => {\r\n    //   // entry.value = execExpression(context, entry.expression);\r\n    //   return getDirectiveEntry(el, attrName);\r\n    // });\r\n    // 获取所有v-on实体\r\n    var entrys = getVOnEntrys({ el: el, vAttrNames: vAttrNames });\r\n    var _loop_1 = function (i) {\r\n        // if(hasFormTag && isVModel)\r\n        // 是表单元素 && 是有v-model\r\n        // 如果tag是input 是否有.lazy\r\n        // 各种事件 input | change\r\n        var entry = entrys[i];\r\n        // 过滤掉input | textarea | select 且有v-model\r\n        // 因为这些标签标签已经被v-model管理事件\r\n        if (model_1.isFormTag(tagName) && entry.name === constants_1.DIRECT_PREFIX + \"model\")\r\n            return \"continue\";\r\n        // 是否有此事件\r\n        VNode.data.on[entry.arg] = function (e) {\r\n            // 表达式方式\r\n            // <div v-on:click=\"count + 1\"></div>\r\n            // 函数名方式\r\n            // <div v-on:click=\"display\"></div>\r\n            // 内联处理器中的方法\r\n            // <div v-on:click=\"display('hi')\"></div>\r\n            // 事件修饰符\r\n            // .stop\r\n            // .prevent\r\n            // .capture\r\n            // .self\r\n            // .once\r\n            // .passive\r\n            // 阻止单击事件继续传播(阻止起泡)\r\n            // <a v-on:click.stop=\"doThis\"></a>\r\n            // 提交事件不再重载页面(屏蔽缺省事件)\r\n            // <form v-on:submit.prevent=\"onSubmit\"></form>\r\n            // 修饰符可以串联(阻止起泡 && 屏蔽缺省事件)\r\n            // <a v-on:click.stop.prevent=\"doThat\"></a>\r\n            // 添加事件监听器时使用事件捕获模式\r\n            // 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理\r\n            // <div v-on:click.capture=\"doThis\">...</div>\r\n            // 只当在 event.target 是当前元素自身时触发处理函数\r\n            // 即事件不是从内部元素触发的\r\n            // <div v-on:click.self=\"doThat\">...</div>\r\n            var startTime = new Date().getTime();\r\n            util_1.log('on开始执行');\r\n            // 标识符\r\n            if (entry.modifiers) {\r\n                if (entry.modifiers.stop) {\r\n                    e.stopPropagation();\r\n                }\r\n                if (entry.modifiers.prevent) {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n            // 下面的代码是执行v-on:click=\"\" 里面代码具体的逻辑\r\n            // 1.a + 1 -> 表达式方式\r\n            // 2.display -> methods函数形式\r\n            // 3.display(a + $event) -> methods函数调用形式\r\n            executeExecutionContextVOn.call(self, { context: context, entry: entry, e: e });\r\n            var endTime = new Date().getTime();\r\n            util_1.log(\"on\\u6240\\u6267\\u884C\\u7684\\u65F6\\u95F4\" + (endTime - startTime) / 1000 + \"m\");\r\n            util_1.log('on执行结束');\r\n            // if (entry.expression in self.$config.methods) {\r\n            //   // 函数名形式 直接调用\r\n            //   this[entry.expression]();\r\n            // } else {\r\n            //   // 表达式\r\n            //   // 1 + 1\r\n            //   // item(item1,$event,3)\r\n            //   // 这个地方会创建新的context避免set陷阱函数执行\r\n            //   execExpression(\r\n            //     context === self.$dataProxy ? createContext.call(self, { $event: e }) : context,\r\n            //     entry.expression,\r\n            //   );\r\n            // }\r\n            // <input v-model=\"a\" />\r\n        };\r\n    };\r\n    // for entrys\r\n    for (var i = 0; i < entrys.length; i++) {\r\n        _loop_1(i);\r\n    }\r\n    return entrys;\r\n}\r\nexports.parseVOn = parseVOn;\r\n"],"names":["Object","defineProperty","exports","value","parseVOn","executeVOn","executeExecutionContextVOn","getVOnEntrys","hasVOn","vue_util_1","require","model_1","util_1","proxy_1","util_2","constants_1","attrNames","hasVAttr","DIRECT_PREFIX","_a","el","vAttrNames","filter","n","indexOf","map","attrName","getDirectiveEntry","context","entry","e","_b","argv","expression","this","$config","methods","isFunction","createExecutionContext","call","$dataProxy","length","execExpression","createContext","$event","apply","tagName","VNode","self","entrys","i","isFormTag","name","data","on","arg","startTime","Date","getTime","log","modifiers","stop","stopPropagation","prevent","preventDefault","endTime","_loop_1"],"mappings":"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"}