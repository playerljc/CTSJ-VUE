{"version":3,"file":"renderComponent.js","sources":["compiler/renderComponent.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.renderComponent = void 0;\r\nvar util_1 = require(\"../core/util\");\r\nvar renderUtil_1 = require(\"./renderUtil\");\r\nvar constants_1 = require(\"../shared/constants\");\r\n/**\r\n * renderComponent - 组件实例的渲染\r\n * @return VNode | Array<VNode>\r\n */\r\nfunction renderComponent() {\r\n    var self = this;\r\n    // 组件实例代表的vnode\r\n    var vnode = renderUtil_1.renderLoop.call(this, {\r\n        context: {},\r\n        el: this.templateEl,\r\n        parentVNode: null,\r\n        parentElement: null,\r\n    });\r\n    if (!vnode)\r\n        return null;\r\n    // vnode的hook设置\r\n    Object.assign(vnode.data.hook, {\r\n        /**\r\n         * 一个vnode已添加\r\n         * @param vnode\r\n         */\r\n        init: function (curVNode) {\r\n            if (curVNode === vnode) {\r\n                util_1.triggerLifecycle.call(self, constants_1.LIFECYCLE_HOOKS[1]);\r\n            }\r\n        },\r\n        /**\r\n         * 已基于vnode创建了一个DOM元素\r\n         * @param emptyVnode\r\n         * @param vnode\r\n         */\r\n        create: function (emptyVnode, curVNode) {\r\n            if (curVNode === vnode) {\r\n                util_1.triggerLifecycle.call(self, constants_1.LIFECYCLE_HOOKS[2]);\r\n            }\r\n        },\r\n        /**\r\n         * insert - 元素已插入DOM\r\n         * @param vnode\r\n         */\r\n        insert: function (curVNode) {\r\n            if (curVNode === vnode) {\r\n                // ------ mount\r\n                util_1.triggerLifecycle.call(self, constants_1.LIFECYCLE_HOOKS[3]);\r\n            }\r\n        },\r\n        /**\r\n         * 元素即将被修补\r\n         */\r\n        prepatch: function (oldVNode, newVNode) {\r\n            if (newVNode === vnode) {\r\n                // beforeUpdate\r\n                util_1.triggerLifecycle.call(self, constants_1.LIFECYCLE_HOOKS[4]);\r\n            }\r\n        },\r\n        /**\r\n         * 元素已被修补\r\n         */\r\n        postpatch: function (oldVNode, newVNode) {\r\n            if (newVNode === vnode) {\r\n                // update\r\n                util_1.triggerLifecycle.call(self, constants_1.LIFECYCLE_HOOKS[5]);\r\n            }\r\n        },\r\n        /**\r\n         * 一个元素被直接或间接删除\r\n         */\r\n        destroy: function (curVNode) {\r\n            if (curVNode === vnode) {\r\n                util_1.triggerLifecycle.call(self, constants_1.LIFECYCLE_HOOKS[7]);\r\n            }\r\n        },\r\n    });\r\n    return vnode;\r\n}\r\nexports.renderComponent = renderComponent;\r\n"],"names":["Object","defineProperty","exports","value","renderComponent","util_1","require","renderUtil_1","constants_1","self","this","vnode","renderLoop","call","context","el","templateEl","parentVNode","parentElement","assign","data","hook","init","curVNode","triggerLifecycle","LIFECYCLE_HOOKS","create","emptyVnode","insert","prepatch","oldVNode","newVNode","postpatch","destroy"],"mappings":"aACAA,OAAOC,eAAeC,QAAS,aAAc,CAAEC,OAAO,IACtDD,QAAQE,qBAAkB,EAC1B,IAAIC,OAASC,QAAQ,gBACjBC,aAAeD,QAAQ,gBACvBE,YAAcF,QAAQ,uBAK1B,SAASF,kBACL,IAAIK,EAAOC,KAEPC,EAAQJ,aAAaK,WAAWC,KAAKH,KAAM,CAC3CI,QAAS,GACTC,GAAIL,KAAKM,WACTC,YAAa,KACbC,cAAe,OAEnB,OAAKP,GAGLX,OAAOmB,OAAOR,EAAMS,KAAKC,KAAM,CAK3BC,KAAM,SAAUC,GACRA,IAAaZ,GACbN,OAAOmB,iBAAiBX,KAAKJ,EAAMD,YAAYiB,gBAAgB,KAQvEC,OAAQ,SAAUC,EAAYJ,GACtBA,IAAaZ,GACbN,OAAOmB,iBAAiBX,KAAKJ,EAAMD,YAAYiB,gBAAgB,KAOvEG,OAAQ,SAAUL,GACVA,IAAaZ,GAEbN,OAAOmB,iBAAiBX,KAAKJ,EAAMD,YAAYiB,gBAAgB,KAMvEI,SAAU,SAAUC,EAAUC,GACtBA,IAAapB,GAEbN,OAAOmB,iBAAiBX,KAAKJ,EAAMD,YAAYiB,gBAAgB,KAMvEO,UAAW,SAAUF,EAAUC,GACvBA,IAAapB,GAEbN,OAAOmB,iBAAiBX,KAAKJ,EAAMD,YAAYiB,gBAAgB,KAMvEQ,QAAS,SAAUV,GACXA,IAAaZ,GACbN,OAAOmB,iBAAiBX,KAAKJ,EAAMD,YAAYiB,gBAAgB,OAIpEd,GA3DI,KA6DfT,QAAQE,gBAAkBA"}