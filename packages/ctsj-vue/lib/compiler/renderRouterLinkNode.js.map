{"version":3,"file":"renderRouterLinkNode.js","sources":["compiler/renderRouterLinkNode.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.renderRouterLinkNode = void 0;\r\nvar vue_util_1 = require(\"@ctsj/vue-util\");\r\nvar renderUtil_1 = require(\"@/vue/compiler/renderUtil\");\r\nvar regexp_1 = require(\"../shared/regexp\");\r\nvar bind_1 = require(\"./directives/bind\");\r\nvar util_1 = require(\"./directives/util\");\r\nvar for_1 = require(\"./directives/for\");\r\nvar if_1 = require(\"./directives/if\");\r\nvar else_1 = require(\"./directives/else\");\r\nvar else_if_1 = require(\"./directives/else-if\");\r\nvar vdom_1 = require(\"../core/vdom\");\r\n/**\r\n * renderRouterLinkNode - 渲染router-link元素\r\n * @param context - Object 上下文对象\r\n * @param el - HtmlElement 元素\r\n * @param parentVNode VNode\r\n * @param parentElement HtmlElement\r\n * @return VNode\r\n *\r\n *\r\n   <router-link> Props\r\n   .to\r\n    .类型: string | Location\r\n\r\n    .解释: 表示目标路由的链接。当被点击后，内部会立刻把 to 的值传到 router.push()，所以这个值可以是一个字符串或者是描述目标位置的对象\r\n\r\n     <!-- 字符串 -->\r\n     <router-link to=\"home\">Home</router-link>\r\n     <!-- 渲染结果 -->\r\n     <a href=\"home\">Home</a>\r\n\r\n     <!-- 使用 v-bind 的 JS 表达式 -->\r\n     <router-link v-bind:to=\"'home'\">Home</router-link>\r\n\r\n     <!-- 不写 v-bind 也可以，就像绑定别的属性一样 -->\r\n     <router-link :to=\"'home'\">Home</router-link>\r\n\r\n     <!-- 同上 -->\r\n     <router-link :to=\"{ path: 'home' }\">Home</router-link>\r\n\r\n     <!-- 命名的路由 -->\r\n     <router-link :to=\"{ name: 'user', params: { userId: 123 }}\">User</router-link>\r\n\r\n     <!-- 带查询参数，下面的结果为 /register?plan=private -->\r\n     <router-link :to=\"{ path: 'register', query: { plan: 'private' }}\" >Register</router-link>\r\n\r\n   .replace\r\n    类型: boolean\r\n    默认值: false\r\n    设置 replace 属性的话，当点击时，会调用 router.replace() 而不是 router.push()，于是导航后不会留下 history 记录。\r\n    <router-link :to=\"{ path: '/abc'}\" replace></router-link>\r\n\r\n   .tag\r\n    类型: string\r\n    默认值: \"a\"\r\n\r\n   .active-class\r\n    类型: string\r\n    默认值: \"router-link-active\"\r\n\r\n   .exact-active-class\r\n    类型: string\r\n    默认值: \"router-link-exact-active\"\r\n    配置当链接被精确匹配的时候应该激活的 class。注意默认值也是可以通过路由构造函数选项 linkExactActiveClass 进行全局配置的\r\n */\r\nfunction renderRouterLinkNode(_a) {\r\n    var _this = this;\r\n    var context = _a.context, el = _a.el, parentVNode = _a.parentVNode, parentElement = _a.parentElement;\r\n    // 如果没有router对象则返回null节点\r\n    if (vue_util_1.isEmpty(this.$router)) {\r\n        return null;\r\n    }\r\n    var vAttrNames = util_1.getVAttrNames(el);\r\n    if (vAttrNames.length) {\r\n        // 解析el的v-for标签\r\n        if (for_1.hasVFor(vAttrNames)) {\r\n            // parse v-for\r\n            return for_1.parseVFor.call(this, \r\n            // 如果context是this.$dataProxy则需要重新创建新的context(上下文)，因为一个v-for就是一个新的上下文环境，因为v-for会有新的变量放入到this中\r\n            {\r\n                context: context,\r\n                el: el,\r\n                parentVNode: parentVNode,\r\n                vAttrNames: vAttrNames,\r\n                renderFun: renderRouterLinkNode,\r\n            });\r\n        }\r\n        // 解析v-if\r\n        if (if_1.hasVIf(vAttrNames)) {\r\n            // parse v-if\r\n            var display = if_1.parseVIf.call(this, { context: context, el: el, vAttrNames: vAttrNames });\r\n            if (!display) {\r\n                // 不显示这个节点\r\n                return null;\r\n            }\r\n        }\r\n        // 解析v-else\r\n        if (else_1.hasVElse(vAttrNames)) {\r\n            // 合理性判断\r\n            // 如果合理则进行计算\r\n            var entry = else_1.parseVElse.call(this, { context: context, el: el, parentElement: parentElement });\r\n            if (!entry.valid) {\r\n                return null;\r\n            }\r\n            if (!entry.result) {\r\n                return null;\r\n            }\r\n        }\r\n        // 解析v-else-if\r\n        if (else_if_1.hasVElseIf(vAttrNames)) {\r\n            // 合理性判断\r\n            // 如果合理则进行计算\r\n            var entry = else_if_1.parseVElseIf.call(this, { context: context, el: el, parentElement: parentElement });\r\n            if (!entry.valid) {\r\n                return null;\r\n            }\r\n            if (!entry.result) {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    // 用来存放<router-link>的属性和值\r\n    var attrs = {};\r\n    // 解析v-bind\r\n    if (bind_1.hasVBind(vAttrNames)) {\r\n        // parse v-bind 都是属性\r\n        var entrys = bind_1.getVBindEntrys.call(this, { context: context, el: el, vAttrNames: vAttrNames });\r\n        entrys.forEach(function (_a) {\r\n            var arg = _a.arg, value = _a.value;\r\n            attrs[arg] = value;\r\n        });\r\n    }\r\n    // 非指令属性 都是属性\r\n    var attrEntrys = util_1.getAttrEntrys(el);\r\n    attrEntrys.forEach(function (_a) {\r\n        var name = _a.name, value = _a.value;\r\n        attrs[name] = value;\r\n    });\r\n    // 获取<router-link>需要替换的标签名称，默认是a元素\r\n    var tagName = 'tag' in attrs && !vue_util_1.isEmpty(attrs.tag) && vue_util_1.isString(attrs.tag) ? attrs.tag : 'a';\r\n    // 使用tag名称创建VNode\r\n    var VNode = vdom_1.createVNode(tagName);\r\n    // 创建VNode的Text\r\n    // el.normalize();\r\n    // for (let i = 0, len = el.childNodes.length; i < len; i++) {\r\n    //   const childEl = el.childNodes[i];\r\n    //   if (isTextNode(childEl)) {\r\n    //     VNode.children.push(renderTextNode.call(this, { context, el: childEl }));\r\n    //   }\r\n    // }\r\n    // class的处理\r\n    // class -> value\r\n    if ('class' in attrs && !vue_util_1.isEmpty(attrs.class)) {\r\n        if (vue_util_1.isObject(attrs.class)) {\r\n            Object.assign(VNode.data.class, attrs.class);\r\n        }\r\n        else if (vue_util_1.isString(attrs.class)) {\r\n            var classNames = attrs.class.trim().split(regexp_1.CLASSNAME_SPLIT);\r\n            classNames.forEach(function (className) {\r\n                VNode.data.class[className] = true;\r\n            });\r\n        }\r\n    }\r\n    // style的处理\r\n    if ('style' in attrs && !vue_util_1.isEmpty(attrs.style)) {\r\n        if (vue_util_1.isObject(attrs.style)) {\r\n            Object.assign(VNode.data.style, attrs.style);\r\n        }\r\n        else if (vue_util_1.isString(attrs.style)) {\r\n            attrs.style\r\n                .split(regexp_1.STYLE_RULE_SPLIT)\r\n                .filter(function (t) { return t; })\r\n                .forEach(function (style) {\r\n                var entry = style.split(regexp_1.STYLE_RULE_ENTRY_SPLIT).filter(function (t) { return t; });\r\n                VNode.data.style[entry[0]] = entry[1];\r\n            });\r\n        }\r\n    }\r\n    // 激活的class处理\r\n    var pathname = window.location.pathname;\r\n    // to的值是location\r\n    var location = attrs.to;\r\n    // 不管location是已什么形式存在，最后都会返回一个path路径\r\n    var path = this.$router.createPath(location);\r\n    var queryIndex = path.indexOf('?');\r\n    if (queryIndex !== -1) {\r\n        // path中去掉query的部分\r\n        path = path.substring(0, queryIndex);\r\n    }\r\n    // 说明当前浏览器路径和当前<router-link to>相等需要加入active-class默认值是router-link-active\r\n    // path包含pathname\r\n    // if (path.startsWith(pathname)) {\r\n    if (path === pathname) {\r\n        var $config = this.$router.$config;\r\n        // linkExactActiveClass 默认值: \"router-link-exact-active\"\r\n        if ('active-class' in attrs) {\r\n            if (attrs['active-class']) {\r\n                VNode.data.class[attrs['active-class']] = true;\r\n            }\r\n            else {\r\n                VNode.data.class['router-link-active'] = true;\r\n            }\r\n        }\r\n        else if ('linkExactActiveClass' in $config) {\r\n            if ($config.linkExactActiveClass) {\r\n                VNode.data.class[$config.linkExactActiveClass] = true;\r\n            }\r\n        }\r\n        else {\r\n            VNode.data.class['router-link-exact-active'] = true;\r\n        }\r\n    }\r\n    /**\r\n     * 注册onClick事件\r\n     * 点击事件中调用push或replace\r\n     */\r\n    VNode.data.on.click = function () {\r\n        // replace\r\n        if ('replace' in attrs && attrs.replace) {\r\n            _this.$router.replace(attrs.to);\r\n        }\r\n        // push\r\n        else {\r\n            _this.$router.push(attrs.to);\r\n        }\r\n    };\r\n    // loop children\r\n    for (var i = 0, len = el.childNodes.length; i < len; i++) {\r\n        var VNodes = renderUtil_1.renderLoop.call(this, {\r\n            context: context,\r\n            el: el.childNodes[i],\r\n            parentVNode: VNode,\r\n            parentElement: el,\r\n        });\r\n        if (!VNodes)\r\n            continue;\r\n        // v-for返回的\r\n        if (vue_util_1.isArray(VNodes)) {\r\n            VNodes.filter(function (n) { return n; }).forEach(function (n) {\r\n                VNode.children.push(n);\r\n            });\r\n        }\r\n        else if (vue_util_1.isObject(VNodes)) {\r\n            VNode.children.push(VNodes);\r\n        }\r\n    }\r\n    return VNode;\r\n}\r\nexports.renderRouterLinkNode = renderRouterLinkNode;\r\n"],"names":["Object","defineProperty","exports","value","renderRouterLinkNode","vue_util_1","require","renderUtil_1","regexp_1","bind_1","util_1","for_1","if_1","else_1","else_if_1","vdom_1","_a","_this","this","context","el","parentVNode","parentElement","isEmpty","$router","vAttrNames","getVAttrNames","length","hasVFor","parseVFor","call","renderFun","hasVIf","parseVIf","hasVElse","entry","parseVElse","valid","result","hasVElseIf","parseVElseIf","attrs","hasVBind","getVBindEntrys","forEach","arg","getAttrEntrys","name","tagName","tag","isString","VNode","createVNode","class","isObject","assign","data","trim","split","CLASSNAME_SPLIT","className","style","STYLE_RULE_SPLIT","filter","t","STYLE_RULE_ENTRY_SPLIT","pathname","window","location","to","path","createPath","queryIndex","indexOf","substring","$config","linkExactActiveClass","on","click","replace","push","i","len","childNodes","VNodes","renderLoop","isArray","n","children"],"mappings":"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"}