{"version":3,"file":"renderRouterLinkNode.js","sources":["compiler/renderRouterLinkNode.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.renderRouterLinkNode = void 0;\r\nvar src_1 = require(\"@ctsj/vue-util/src\");\r\nvar bind_1 = require(\"./directives/bind\");\r\nvar util_1 = require(\"./directives/util\");\r\nvar for_1 = require(\"./directives/for\");\r\nvar if_1 = require(\"./directives/if\");\r\nvar else_1 = require(\"./directives/else\");\r\nvar else_if_1 = require(\"./directives/else-if\");\r\nvar vdom_1 = require(\"../core/vdom\");\r\n/**\r\n * renderRouterLinkNode - 渲染router-link元素\r\n * @param context - Object 上下文对象\r\n * @param el - HtmlElement 元素\r\n * @param parentVNode VNode\r\n * @param parentElement HtmlElement\r\n * @return VNode\r\n *\r\n *\r\n   <router-link> Props\r\n   .to\r\n    .类型: string | Location\r\n\r\n    .解释: 表示目标路由的链接。当被点击后，内部会立刻把 to 的值传到 router.push()，所以这个值可以是一个字符串或者是描述目标位置的对象\r\n\r\n     <!-- 字符串 -->\r\n     <router-link to=\"home\">Home</router-link>\r\n     <!-- 渲染结果 -->\r\n     <a href=\"home\">Home</a>\r\n\r\n     <!-- 使用 v-bind 的 JS 表达式 -->\r\n     <router-link v-bind:to=\"'home'\">Home</router-link>\r\n\r\n     <!-- 不写 v-bind 也可以，就像绑定别的属性一样 -->\r\n     <router-link :to=\"'home'\">Home</router-link>\r\n\r\n     <!-- 同上 -->\r\n     <router-link :to=\"{ path: 'home' }\">Home</router-link>\r\n\r\n     <!-- 命名的路由 -->\r\n     <router-link :to=\"{ name: 'user', params: { userId: 123 }}\">User</router-link>\r\n\r\n     <!-- 带查询参数，下面的结果为 /register?plan=private -->\r\n     <router-link :to=\"{ path: 'register', query: { plan: 'private' }}\" >Register</router-link>\r\n\r\n   .replace\r\n    类型: boolean\r\n    默认值: false\r\n    设置 replace 属性的话，当点击时，会调用 router.replace() 而不是 router.push()，于是导航后不会留下 history 记录。\r\n    <router-link :to=\"{ path: '/abc'}\" replace></router-link>\r\n\r\n   .tag\r\n    类型: string\r\n    默认值: \"a\"\r\n\r\n   .active-class\r\n    类型: string\r\n    默认值: \"router-link-active\"\r\n\r\n   .exact-active-class\r\n    类型: string\r\n    默认值: \"router-link-exact-active\"\r\n    配置当链接被精确匹配的时候应该激活的 class。注意默认值也是可以通过路由构造函数选项 linkExactActiveClass 进行全局配置的\r\n */\r\nfunction renderRouterLinkNode(_a) {\r\n    var _this = this;\r\n    var context = _a.context, el = _a.el, parentVNode = _a.parentVNode, parentElement = _a.parentElement;\r\n    var vAttrNames = util_1.getVAttrNames(el);\r\n    if (vAttrNames.length) {\r\n        // 解析el的v-for标签\r\n        if (for_1.hasVFor(vAttrNames)) {\r\n            // parse v-for\r\n            return for_1.parseVFor.call(this, \r\n            // 如果context是this.$dataProxy则需要重新创建新的context(上下文)，因为一个v-for就是一个新的上下文环境，因为v-for会有新的变量放入到this中\r\n            {\r\n                context: context,\r\n                el: el,\r\n                parentVNode: parentVNode,\r\n                vAttrNames: vAttrNames,\r\n                renderFun: renderRouterLinkNode,\r\n            });\r\n        }\r\n        // 解析v-if\r\n        if (if_1.hasVIf(vAttrNames)) {\r\n            // parse v-if\r\n            var display = if_1.parseVIf.call(this, { context: context, el: el, vAttrNames: vAttrNames });\r\n            if (!display) {\r\n                // 不显示这个节点\r\n                return null;\r\n            }\r\n        }\r\n        // 解析v-else\r\n        if (else_1.hasVElse(vAttrNames)) {\r\n            // 合理性判断\r\n            // 如果合理则进行计算\r\n            var entry = else_1.parseVElse.call(this, { context: context, el: el, parentElement: parentElement });\r\n            if (!entry.valid) {\r\n                return null;\r\n            }\r\n            if (!entry.result) {\r\n                return null;\r\n            }\r\n        }\r\n        // 解析v-else-if\r\n        if (else_if_1.hasVElseIf(vAttrNames)) {\r\n            // 合理性判断\r\n            // 如果合理则进行计算\r\n            var entry = else_if_1.parseVElseIf.call(this, { context: context, el: el, parentElement: parentElement });\r\n            if (!entry.valid) {\r\n                return null;\r\n            }\r\n            if (!entry.result) {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    // 用来存放<router-link>的属性和值\r\n    var attrs = {};\r\n    // 解析v-bind\r\n    if (bind_1.hasVBind(vAttrNames)) {\r\n        // parse v-bind 都是属性\r\n        var entrys = bind_1.getVBindEntrys.call(this, { context: context, el: el, vAttrNames: vAttrNames });\r\n        entrys.forEach(function (_a) {\r\n            var arg = _a.arg, value = _a.value;\r\n            attrs[arg] = value;\r\n        });\r\n    }\r\n    // 非指令属性 都是属性\r\n    var attrEntrys = util_1.getAttrEntrys(el);\r\n    attrEntrys.forEach(function (_a) {\r\n        var name = _a.name, value = _a.value;\r\n        attrs[name] = value;\r\n    });\r\n    // 获取<router-link>需要替换的标签名称，默认是a元素\r\n    var tagName = 'tag' in attrs && !src_1.isEmpty(attrs.tag) && src_1.isString(attrs.tag) ? attrs.tag : 'a';\r\n    // 使用tag名称创建VNode\r\n    var VNode = vdom_1.createVNode(tagName);\r\n    // 创建VNode的Text\r\n    VNode.children.push(vdom_1.createTextVNode(el.innerText));\r\n    // class的处理\r\n    // class -> value\r\n    if ('class' in attrs && !src_1.isEmpty(attrs.class)) {\r\n        if (src_1.isObject(attrs.class)) {\r\n            Object.assign(VNode.data.class, attrs.class);\r\n        }\r\n        else if (src_1.isString(attrs.class)) {\r\n            attrs.class.split(' ').forEach(function (className) {\r\n                VNode.data.class[className] = true;\r\n            });\r\n        }\r\n    }\r\n    // style的处理\r\n    if ('style' in attrs && !src_1.isEmpty(attrs.style)) {\r\n        if (src_1.isObject(attrs.style)) {\r\n            Object.assign(VNode.data.style, attrs.style);\r\n        }\r\n        else if (src_1.isString(attrs.style)) {\r\n            attrs.style.split(';').forEach(function (style) {\r\n                var entry = style.split(':');\r\n                VNode.data.style[entry[0]] = entry[1];\r\n            });\r\n        }\r\n    }\r\n    // 激活的class处理\r\n    var pathname = window.location.pathname;\r\n    // to的值是location\r\n    var location = attrs.to;\r\n    // 不管location是已什么形式存在，最后都会返回一个path路径\r\n    var path = this.$router.createPath(location);\r\n    var queryIndex = path.indexOf('?');\r\n    if (queryIndex !== -1) {\r\n        // path中去掉query的部分\r\n        path = path.substring(0, queryIndex);\r\n    }\r\n    // 说明当前浏览器路径和当前<router-link to>相等需要加入active-class默认值是router-link-active\r\n    if (path === pathname) {\r\n        var $config = this.$router.$config;\r\n        // linkExactActiveClass 默认值: \"router-link-exact-active\"\r\n        if ('active-class' in attrs) {\r\n            if (attrs['active-class']) {\r\n                VNode.data.class[attrs['active-class']] = true;\r\n            }\r\n            else {\r\n                VNode.data.class['router-link-active'] = true;\r\n            }\r\n        }\r\n        else if ('linkExactActiveClass' in $config) {\r\n            if ($config.linkExactActiveClass) {\r\n                VNode.data.class[$config.linkExactActiveClass] = true;\r\n            }\r\n        }\r\n        else {\r\n            VNode.data.class['router-link-exact-active'] = true;\r\n        }\r\n    }\r\n    /**\r\n     * 注册onClick事件\r\n     * 点击事件中调用push或replace\r\n     */\r\n    VNode.data.on.click = function () {\r\n        // replace\r\n        if ('replace' in attrs && attrs.replace) {\r\n            _this.$router.replace(attrs.to);\r\n        }\r\n        // push\r\n        else {\r\n            _this.$router.push(attrs.to);\r\n        }\r\n    };\r\n    return VNode;\r\n}\r\nexports.renderRouterLinkNode = renderRouterLinkNode;\r\n"],"names":["Object","defineProperty","exports","value","renderRouterLinkNode","src_1","require","bind_1","util_1","for_1","if_1","else_1","else_if_1","vdom_1","_a","entry","_this","this","context","el","parentVNode","parentElement","vAttrNames","getVAttrNames","length","hasVFor","parseVFor","call","renderFun","hasVIf","parseVIf","hasVElse","parseVElse","valid","result","hasVElseIf","parseVElseIf","attrs","hasVBind","getVBindEntrys","forEach","arg","getAttrEntrys","name","tagName","isEmpty","tag","isString","VNode","createVNode","children","push","createTextVNode","innerText","class","isObject","assign","data","split","className","style","pathname","window","location","to","path","$router","createPath","queryIndex","indexOf","substring","$config","linkExactActiveClass","on","click","replace"],"mappings":"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"}