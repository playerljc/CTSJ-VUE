{"version":3,"file":"renderDynamicComponentNode.js","sources":["compiler/renderDynamicComponentNode.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.renderDynamicComponentNode = void 0;\r\nvar vue_util_1 = require(\"@ctsj/vue-util\");\r\nvar util_1 = require(\"./directives/util\");\r\nvar for_1 = require(\"./directives/for\");\r\nvar if_1 = require(\"./directives/if\");\r\nvar else_1 = require(\"./directives/else\");\r\nvar else_if_1 = require(\"./directives/else-if\");\r\nvar util_2 = require(\"../core/util\");\r\nvar util_3 = require(\"../core/component/util\");\r\nvar constants_1 = require(\"../shared/constants\");\r\nvar renderComponentNode_1 = require(\"./renderComponentNode\");\r\n/**\r\n * renderDynamicComponent - 渲染动态组件节点\r\n * @param context - Object 上下文对象\r\n * @param el - HtmlElement el元素\r\n * @param parentVNode - VNode 父元素VNode\r\n * @param parentElement - HtmlElement 父元素\r\n * @return VNode | VNodes\r\n *\r\n * 如果<component></component>含有v-for和v-if则不用处理key\r\n *\r\n */\r\nfunction renderDynamicComponentNode(_a) {\r\n    var context = _a.context, el = _a.el, parentVNode = _a.parentVNode, parentElement = _a.parentElement;\r\n    var vAttrNames = util_1.getVAttrNames(el);\r\n    var key;\r\n    if (vAttrNames.length) {\r\n        // 解析el的v-for标签\r\n        if (for_1.hasVFor(vAttrNames)) {\r\n            // parse v-for\r\n            return for_1.parseVFor.call(this, \r\n            // 如果context是this.$dataProxy则需要重新创建新的context(上下文)，因为一个v-for就是一个新的上下文环境，因为v-for会有新的变量放入到this中\r\n            {\r\n                context: context,\r\n                // context === this.$dataProxy ? createContext.call(this, this.$dataProxy) : context,\r\n                el: el,\r\n                parentVNode: parentVNode,\r\n                vAttrNames: vAttrNames,\r\n                renderFun: renderDynamicComponentNode,\r\n            });\r\n        }\r\n        // 这个key属性可能是v-bind:key=，也可能是key=\r\n        key = util_1.getKey.call(this, { context: context, el: el });\r\n        // 解析v-if\r\n        if (if_1.hasVIf(vAttrNames)) {\r\n            // parse v-if\r\n            var display = if_1.parseVIf.call(this, { context: context, el: el, vAttrNames: vAttrNames });\r\n            if (!display) {\r\n                // 不显示这个节点\r\n                if (key) {\r\n                    // 有key属性则在componentsMap中删除这个组件的引用\r\n                    this.componentsMap.delete(key);\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n        // 解析v-else\r\n        if (else_1.hasVElse(vAttrNames)) {\r\n            // 合理性判断\r\n            // 如果合理则进行计算\r\n            var entry_1 = else_1.parseVElse.call(this, { context: context, el: el, parentElement: parentElement });\r\n            if (!entry_1.valid) {\r\n                if (key) {\r\n                    // 有key属性则在componentsMap中删除这个组件的引用\r\n                    this.componentsMap.delete(key);\r\n                }\r\n                return null;\r\n            }\r\n            if (!entry_1.result) {\r\n                if (key) {\r\n                    // 有key属性则在componentsMap中删除这个组件的引用\r\n                    this.componentsMap.delete(key);\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n        // 解析v-else-if\r\n        if (else_if_1.hasVElseIf(vAttrNames)) {\r\n            // 合理性判断\r\n            // 如果合理则进行计算\r\n            var entry_2 = else_if_1.parseVElseIf.call(this, { context: context, el: el, parentElement: parentElement });\r\n            if (!entry_2.valid) {\r\n                if (key) {\r\n                    // 有key属性则在componentsMap中删除这个组件的引用\r\n                    this.componentsMap.delete(key);\r\n                }\r\n                return null;\r\n            }\r\n            if (!entry_2.result) {\r\n                if (key) {\r\n                    // 有key属性则在componentsMap中删除这个组件的引用\r\n                    this.componentsMap.delete(key);\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    // 这个key属性可能是v-bind:key=，也可能是key=\r\n    key = util_1.getKey.call(this, { context: context, el: el });\r\n    // 获取is属性的值\r\n    // is属性的值就是组件的标签的名称\r\n    var componentTagName = util_1.getAttribute.call(this, { context: context, attrName: 'is', el: el });\r\n    // 如果没有is属性\r\n    if (!componentTagName)\r\n        return null;\r\n    // 判断componentTagName是否注册过\r\n    var isComponent = false;\r\n    var componentEl = document.createElement(componentTagName);\r\n    var isVueIns = util_2.isVueInstance(this);\r\n    // this是否是vue实例\r\n    if (isVueIns) {\r\n        // 在vue实例下判断是否是组件节点\r\n        isComponent = util_3.isComponentNodeByVue(componentEl);\r\n    }\r\n    else {\r\n        var isComponentIns = util_3.isComponentInstance(this);\r\n        // this是否是component实例\r\n        if (isComponentIns) {\r\n            // 在component实例下判断是否是组件节点\r\n            isComponent = util_3.isComponentNodeByComponent(componentEl, this.$getComponentsConfig());\r\n        }\r\n        // this既不是vue实例也不是component实例\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    // 如果is的值不是组件(没有注册过)\r\n    if (!isComponent)\r\n        return null;\r\n    // 获取is属性的名字是is还是v-bind:is\r\n    var isAttrName = util_1.getAttributeName({ attrName: 'is', el: el });\r\n    // 赋值component标签所有的属性给componentEl除了is属性\r\n    el.getAttributeNames()\r\n        .filter(function (attrName) {\r\n        return attrName !== isAttrName &&\r\n            !attrName.startsWith(constants_1.DIRECT_PREFIX + \"bind:key\") &&\r\n            attrName !== 'key';\r\n    })\r\n        .forEach(function (attrName) { return componentEl.setAttribute(attrName, el.getAttribute(attrName)); });\r\n    // el没有key属性\r\n    if (vue_util_1.isEmpty(key)) {\r\n        key = vue_util_1.uuid();\r\n        el.setAttribute('key', key);\r\n        this.componentsMap.set(key, { componentName: componentTagName, key: vue_util_1.uuid() });\r\n    }\r\n    var entry = this.componentsMap.get(key);\r\n    if (vue_util_1.isEmpty(entry)) {\r\n        this.componentsMap.set(key, { componentName: componentTagName, key: vue_util_1.uuid() });\r\n    }\r\n    else {\r\n        // 如果切换了componentName则需要进行删除和重新生成key的操作\r\n        if (entry.componentName !== componentTagName) {\r\n            this.componentsMap.delete(entry.key);\r\n            entry.componentName = componentTagName;\r\n            entry.key = vue_util_1.uuid();\r\n        }\r\n    }\r\n    entry = this.componentsMap.get(key);\r\n    componentEl.setAttribute('key', entry.key);\r\n    return renderComponentNode_1.renderComponentNode.call(this, {\r\n        context: context,\r\n        el: componentEl,\r\n        parentVNode: parentVNode,\r\n        parentElement: parentElement,\r\n    });\r\n    // 主要是需要create一个组件元素节点，这个节点的key属性的值需要斟酌一下\r\n    // key属性的值应该是component的key属性值从componentMap中进行获取，一般这个集合获取的值是组件的实例对象\r\n    // 而对于component节点来说，值是一个对象{componentName:'组件标签名称',key:'组件的key'}\r\n}\r\nexports.renderDynamicComponentNode = renderDynamicComponentNode;\r\n"],"names":["Object","defineProperty","exports","value","renderDynamicComponentNode","vue_util_1","require","util_1","for_1","if_1","else_1","else_if_1","util_2","util_3","constants_1","renderComponentNode_1","_a","context","el","parentVNode","parentElement","vAttrNames","getVAttrNames","length","hasVFor","parseVFor","call","this","renderFun","key","getKey","hasVIf","parseVIf","componentsMap","delete","hasVElse","entry_1","parseVElse","valid","result","hasVElseIf","entry_2","parseVElseIf","componentTagName","getAttribute","attrName","isComponent","componentEl","document","createElement","isVueInstance","isComponentNodeByVue","isComponentInstance","isComponentNodeByComponent","$getComponentsConfig","isAttrName","getAttributeName","getAttributeNames","filter","startsWith","DIRECT_PREFIX","forEach","setAttribute","isEmpty","uuid","set","componentName","entry","get","renderComponentNode"],"mappings":"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"}